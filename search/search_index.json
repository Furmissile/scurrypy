{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to ScurryPy","text":"<p>A simple Discord API wrapper in Python!</p> <p>While this wrapper is mainly used for various squirrel-related shenanigans, it can also be used for more generic bot purposes.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Command and event handling</li> <li>Declarative style using decorators</li> <li>Supports both legacy and new features</li> <li>Respects Discord's rate limits</li> </ul> <p>Below is a quick overview of what\u2019s coming and what won\u2019t be supported:</p>"},{"location":"#features-planned-for-future-implementation","title":"Features planned for future implementation","text":"<ul> <li>Remaining Discord API endpoints</li> <li>Sharding support</li> <li>Auto-moderation abstractions</li> </ul>"},{"location":"#features-intentionally-omitted","title":"Features intentionally omitted","text":"<ul> <li>Voice support</li> <li>Subcommands</li> </ul>"},{"location":"#top-level-links","title":"Top-Level Links","text":"<ul> <li>Getting Started</li> <li>Examples</li> <li>API</li> <li>Events</li> <li>Resources</li> <li>Internals (DEV ONLY)</li> </ul>"},{"location":"#tips-when-reading-the-docs","title":"Tips when Reading the Docs","text":"<ul> <li>Only dataclasses not present on the page get cross referenced.</li> <li>Otherwise, if a dataclass contains another dataclass, expect it to come right after that dataclass.</li> </ul>"},{"location":"advanced_examples/","title":"Advanced Examples","text":"<p>The following examples should work out-of-the-box and assume you have your bot set up.</p> <p>For setup, see the Bot setup guide.</p> <p>Looking for examples about older features? Check out Legacy Examples</p> <p>About these examples</p> <p>Each example is self-contained and can be copied directly into your bot between setup and <code>bot.run()</code>.</p> <p>Beware of similar command names!</p>"},{"location":"advanced_examples/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Adding Persistent Data</li> <li>Requesting a Resource</li> </ul>"},{"location":"advanced_examples/#adding-persistent-data","title":"Adding Persistent Data","text":"<p>Demonstrates how to inject user-defined data to run alongside your bot. This example uses a PG database connection. <pre><code>from dataclasses import dataclass\nimport asyncpg\n\n@dataclass\nclass MyState(discord.BaseConfig):\n    pg_conn: asyncpg.Pool = None  # pool of connections\n\n@client.setup_hook\nasync def init_db(bot: discord.Client):\n    bot.config.pg_conn = await asyncpg.create_pool(\n        host=\"your-host\",\n        user=\"your-username\",\n        database=\"your-db-name\"\n    )\n    print(\"DB pool initialized\")\n\n@client.shutdown_hook\nasync def close_db(bot: discord.Client):\n    await bot.config.pg_conn.close()\n    print(\"DB pool closed\")\n</code></pre></p> <p>Note on <code>.config</code> type</p> <p>While <code>.config</code> can technically be anything, it is recommended to use <code>discord.BaseConfig</code> and the dataclass decorator.</p> <p>Dataclasses make accessing fields more object-like instead of dict-like.</p>"},{"location":"advanced_examples/#requesting-a-resource","title":"Requesting a Resource","text":"<p>Resources (like a channel or a message) can be requested for through client.</p> <p>Demonstrates requesting a message to attach a thread. <pre><code>@client.command(\n    discord.SlashCommand('example', 'Demonstrates creating a thread from a resource!'), \n    guild_ids=GUILD_ID # must be guild ID your bot is in!\n)\nasync def on_example(bot: discord.Client, event: discord.InteractionEvent):\n    resp = await event.interaction.respond('You got it!', with_response=True)\n    await bot.fetch_channel(event.interaction.channel_id).create_thread_from_message(resp.interaction.response_message_id, 'Thread name')\n</code></pre></p>"},{"location":"examples/","title":"Examples","text":"<p>The following examples should work out-of-the-box and assume you have your bot set up.</p> <p>For setup, see the Bot setup guide.</p> <p>Looking for examples about older features? Check out Legacy Examples</p> <p>About these examples</p> <p>Each example is self-contained and can be copied directly into your bot between setup and <code>bot.run()</code>.</p> <p>Beware of similar command names!</p>"},{"location":"examples/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Minimal Slash Command</li> <li>Building with Discord's V2 Components</li> <li>Building and Responding to Components</li> <li>Building and Responding to Select Components</li> <li>Building and responding to a Modal</li> <li>Responding to an Event</li> <li>Adding Attachments</li> </ul>"},{"location":"examples/#minimal-slash-command","title":"Minimal Slash Command","text":"<p>Demonstrates responding to a slash command. Sends the message <code>Hello, {user}!</code> when <code>/example</code> is sent.</p> <pre><code>@client.command(\n    command=discord.SlashCommand(name='example', description='Demonstrate the minimal slash command!'),\n    guild_ids=GUILD_ID # must be guild ID your bot is in!\n)\nasync def on_example(bot: discord.Client, event: discord.InteractionEvent):\n    await event.interaction.respond(f'Hello, {event.interaction.member.user.username}!')\n</code></pre> <p>Guild vs Global</p> <ul> <li>Use global commands for production bots (may take up to 1 hour to appear).</li> <li>Use guild commands for instant registration within a guild.</li> </ul>"},{"location":"examples/#building-with-discords-v2-components","title":"Building with Discord's V2 Components","text":"<p>Demonstrates building the V2 component: a container. <pre><code>@client.command(\n    command=discord.SlashCommand(name='example', description=\"Demonstrate using Discord's new component system!\"),\n    guild_ids=GUILD_ID # must be guild ID your bot is in!\n)\nasync def on_example(bot: discord.Client, event: discord.InteractionEvent):\n    await event.interaction.respond(\n        discord.MessageBuilder()\n            .add_container(discord.Container()\n                .set_color('#d4af37')\n                .add_text_display(\"It's dangerous to go alone!\")\n                .add_separator()\n                .add_text_display('Take this.')\n            )\n            .set_flags(is_components_v2=True) # THIS IS A NECESSITY!\n    )\n</code></pre></p>"},{"location":"examples/#building-and-responding-to-components","title":"Building and Responding to Components","text":"<p>Demonstrates building a button and responding to a user pressing it.</p> <pre><code>import random\n\n@client.component('best_custom_id')\nasync def route(bot: discord.Client, event: discord.InteractionEvent):\n    adj = random.choice(['wonderous', 'beautiful', 'charming', 'vibrant', 'sinister'])\n    await event.interaction.update(\n        message=discord.MessageBuilder(content=f'Hello *{adj}* world!')\n            .add_row(discord.ActionRow()\n                .add_button(style='Primary', label='Press me again!', custom_id='best_custom_id', emoji='\u2764\ufe0f\u200d\ud83d\udd25')\n            )\n    )\n\n@client.command(\n    command=discord.SlashCommand(name='example', description='Demonstrate using components!'), \n    guild_ids=GUILD_ID # must be guild ID your bot is in!\n)\nasync def on_example(bot: discord.Client, event: discord.InteractionEvent):\n    await event.interaction.respond(\n        message=discord.MessageBuilder(content='Hello world!')\n            .add_row(discord.ActionRow()\n                .add_button(style='Primary', label='Press me!', custom_id='best_custom_id', emoji='\u2764\ufe0f')\n            )\n    )\n</code></pre>"},{"location":"examples/#building-and-responding-to-select-components","title":"Building and Responding to Select Components","text":"<p>Demonstrates building a string select component and responding. <pre><code>@client.component(custom_id='on_string_select')\nasync def on_string_select(bot: discord.Client, event: discord.InteractionEvent):\n    await event.interaction.respond(f'You selected option: **{event.data.values[0]}**!')\n\n@client.command(\n    command=discord.SlashCommand(name='example', description='Demonstrate the select components!'), \n    guild_ids=GUILD_ID # must be guild ID your bot is in!\n)\nasync def on_example(bot: discord.Client, event: discord.InteractionEvent):\n    await event.interaction.respond(\n        discord.MessageBuilder(\"Select an option:\")\n            .add_row(discord.ActionRow()\n                .string_select(\n                    discord.StringSelect(custom_id='on_string_select', placeholder='Choose an option...')\n                        .add_option(label='Caterpillar', emoji='\ud83d\udc1b', value='Caterpillar', description='(best option)')\n                        .add_option(label='Butterfly', emoji='\ud83e\udd8b', value='Butterfly')\n                        .add_option(label='Ant', emoji='\ud83d\udc1c', value='Ant')\n                )\n            )\n    )\n</code></pre></p>"},{"location":"examples/#building-and-responding-to-a-modal","title":"Building and responding to a Modal","text":"<p>Demonstrates using the modal feature and extracting the user's responses. <pre><code>@client.component(custom_id='modal_one')\nasync def modal_one(bot: discord.Client, event: discord.InteractionEvent):\n    label = event.data.get_modal_data('bug_select')[0]\n    details = event.data.get_modal_data('bug_explanation')\n\n    await event.interaction.respond(\n        f\"Form Data: \\nSelect: {label} \\nDetails: {details}\",\n        ephemeral=True\n    )\n\n@client.command(\n    command=discord.SlashCommand(name='example', description='Demonstrate the modal request/response!'),\n    guild_ids=GUILD_ID # must be guild ID your bot is in!\n)\nasync def on_example(bot: discord.Client, event: discord.InteractionEvent):\n    select_label = (discord.Label(label=\"What's your favorite bug?\")\n        .string_select(\n            discord.StringSelect(custom_id='bug_select', placeholder='Choose...', required=True)\n                .add_option(label='Ant', value='Ant', description='(best option)', emoji='\ud83d\udc1c')\n                .add_option(label='Butterfly', value='Butterfly', emoji='\ud83e\udd8b')\n                .add_option(label='Caterpillar', value='Caterpillar', emoji='\ud83d\udc1b')\n        )\n    )\n\n    inp_label = (discord.Label(label='Why is it your favorite?', description='Provide as much detail as possible!')\n        .text_input(\n            style='Paragraph',\n            placeholder='Write your explanation here...',\n            custom_id='bug_explanation',\n            min_length=25,\n            max_length=250\n        )\n    )\n\n    await event.interaction.respond_modal(\n        discord.ModalBuilder(\n            title='Bug Report',\n            custom_id='modal_one'\n        )\n        .add_label(select_label)\n        .add_label(inp_label)\n    )\n</code></pre></p>"},{"location":"examples/#responding-to-an-event","title":"Responding to an Event","text":"<p>Demonstrates responding to a reaction added to one of the bot's messages. <pre><code>@client.event(\"MESSAGE_REACTION_ADD\")\nasync def on_reaction_add(bot: discord.Client, event: discord.ReactionAddEvent):\n    if event.message_author_id == bot.application_id:\n        await bot.message_from_id(event.channel_id, event.message_id).send('Love ya too!')\n</code></pre></p>"},{"location":"examples/#adding-attachments","title":"Adding Attachments","text":"<p>Demonstrates adding multiple attachments to a legacy embed. This example can be extended to <code>Containers</code> and other fields that need an https or attachment scheme. <pre><code>@client.command(\n    command=discord.SlashCommand(name='example', description='Demonstrate adding an attachment!'), \n    guild_ids=GUILD_ID\n)\nasync def on_example(bot: discord.Client, event: discord.InteractionEvent):\n    await event.interaction.respond(\n        discord.MessageBuilder()\n            .add_attachment('relative/path/to/file.png')\n            .add_attachment('relative/path/to/animation.gif')\n            .add_embed(discord.EmbedBuilder('Example Embed')\n                .set_user_author(event.interaction.member.user)\n                .set_color('#d4af37')\n                .set_thumbnail(f'attachment://file.png') # attachment://&lt;filename&gt;\n                .set_image(f'attachment://animation.gif')\n                .set_timestamp()\n            )\n    )\n</code></pre></p>"},{"location":"getting_started/","title":"Getting Started","text":"<p>The following code snippet is how your bot should be setup.</p>"},{"location":"getting_started/#setup","title":"Setup","text":"<p>Place the following code in your main file: <pre><code>import discord, os\nfrom dotenv import load_dotenv\n\nload_dotenv(dotenv_path='./path/to/env') # omit argument if your env file is on the same level\n\nclient = discord.Client(\n    token=os.getenv(\"DISCORD_TOKEN\"),\n    application_id=1234567890 # replace with your bot's user ID\n)\n\n# your code or example snippets here\n\nclient.run()\n</code></pre></p> <p>Place the following variables in your <code>.env</code> file: <pre><code>DISCORD_TOKEN=\"your-bot-token\"\n</code></pre></p> <p>Setup rules</p> <ul> <li>Keep sensitive values (like your bot\u2019s token) in a <code>.env</code> file instead of hardcoding them.  </li> <li>Always place <code>bot.run()</code> at the end of your script, after all commands and event handlers are registered.</li> </ul>"},{"location":"getting_started/#next-steps","title":"Next Steps","text":"<ul> <li>Want a quick reference? Check out the API</li> <li>Need some extra help? Check out Examples</li> </ul>"},{"location":"legacy_examples/","title":"Examples","text":"<p>The following examples should work out-of-the-box and assume you have your bot set up.</p> <p>For setup, see the Bot setup guide.</p> <p>Legacy Examples</p> <p>These features exists for compatibility with older bots. Prefer the new examples. Not sure what is the new equivalent of the legacy example? Check out Migrations</p> <p>About these examples</p> <p>Each example is self-contained and can be copied directly into your bot between setup and <code>bot.run()</code>.</p>"},{"location":"legacy_examples/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Setting and Responding to a Command Prefix</li> <li>Building an Embed</li> </ul>"},{"location":"legacy_examples/#setting-and-responding-to-a-command-prefix","title":"Setting and Responding to a Command Prefix","text":"<p>Demonstrates responding to a message prefix command. Sends the message <code>Pong!</code> if <code>!ping</code> is sent.</p> <p>Important</p> <p>Using message prefix commands requires the PRIVILEGED intent <code>MESSAGE_CONTENT</code>!</p> <pre><code>@client.prefix_command\nasync def ping(bot: discord.Client, event: discord.MessageCreateEvent): # the function name is the name of the command!\n    await event.message.send(f\"Pong!\")\n</code></pre>"},{"location":"legacy_examples/#building-an-embed","title":"Building an Embed","text":"<p>Demonstrate building an embed in response to a message prefix. <pre><code>@client.prefix_command\nasync def example(bot: discord.Client, event: discord.MessageCreateEvent): # the function name is the name of the command!\n    await event.message.send(\n        discord.MessageBuilder()\n            .add_embed(discord.EmbedBuilder('Example Embed')\n                .set_user_author(event.interaction.member.user)\n                .set_color('#d4af37')\n                .set_timestamp()\n            )\n    )\n</code></pre></p> <p>Tip</p> <p>While this example shows building an embed in response to a message prefix, you can also build embeds in response to <code>InteractionEvent</code>!</p>"},{"location":"migrations/","title":"Migrations","text":"<p>Discord updates its features frequently, which can affect how legacy code works. This migration guide helps you transition from older examples to their updated equivalents, with a brief explanation of the changes and how to use them in the new API.</p>"},{"location":"migrations/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Embed to Container</li> <li>Prefix to Application Command</li> </ul>"},{"location":"migrations/#prefix-to-application-command","title":"Prefix to Application Command","text":"<p>Application commands are a newer, feature-rich, and less cumbersome replacement for message prefix commands. There are three types:</p> <ul> <li>Slash commands (e.g., <code>/example</code>)</li> <li>Message commands (message option under <code>Apps</code>)</li> <li>User commands (user option under <code>Apps</code>)  </li> </ul> <p>Why is this less cumbersome? You no longer need to listen to and parse message content (which is now a privileged intent). Instead, you just listen for <code>InteractionCreate</code> events \u2014 and that\u2019s where ScurryPy comes in!  </p> <p>Old vs New</p> <ul> <li>Prefix command example</li> <li>Slash command example</li> </ul>"},{"location":"migrations/#embed-to-container","title":"Embed to Container","text":"<p>Containers display and format much like traditional embeds, but with added flexibility for arranging components and customizing message layout.</p> <p>Some new features of containers introduces:</p> <ul> <li>Media Gallery</li> <li>Section</li> <li>Separators</li> <li>and more!</li> </ul> <p>Check out Containers for more!</p> <p>Old vs New</p> <ul> <li>Embed example </li> <li>Container example</li> </ul>"},{"location":"api/","title":"Overview of API","text":""},{"location":"api/#welcome-to-the-api-section","title":"Welcome to the API section!","text":"<p>This section covers the high-level objects. It provides entry-level classes for building a bot such as the client, registering commands and event listeners, and accessing Discord resources.</p>"},{"location":"api/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Client - main entry point for discord bot.</li> <li>Intents - specify what events you want your bot to receive.</li> <li>Commands - register and runs commands and event handlers.</li> <li>UI Components - tools for building Discord's new component setup.</li> <li>Components - register and runs component handlers.</li> <li>Message - tools for building a message.</li> <li>Models - dataclasses mimicing Discord's payload structure for dot access.</li> <li>Role - layout for building a role.</li> <li>Embed (Legacy) - tools for adding embedded content within a message.</li> </ul>"},{"location":"api/client/","title":"Client API","text":"<p>Note</p> <p>The following classes come from the <code>discord.client</code> module.</p>"},{"location":"api/client/#discord.client.Client","title":"<code>Client</code>","text":"<p>               Bases: <code>ClientLike</code></p> <p>Main entry point for Discord bots. Ties together the moving parts: gateway, HTTP, event dispatching, command handling, and resource managers.</p> <p>Parameters:</p> <ul> <li> <code>token</code>               (<code>str</code>)           \u2013            <p>the bot's token</p> </li> <li> <code>application_id</code>               (<code>int</code>)           \u2013            <p>the bot's user ID</p> </li> <li> <code>intents</code>               (<code>int</code>, default:                   <code>DEFAULT</code> )           \u2013            <p>gateway intents. Defaults to Intents.DEFAULT.</p> </li> <li> <code>config</code>               (<code>BaseConfig</code>, default:                   <code>None</code> )           \u2013            <p>user-defined config data</p> </li> <li> <code>debug_mode</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>toggle debug messages. Defaults to False.</p> </li> <li> <code>prefix</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>set message prefix if using command prefixes</p> </li> <li> <code>quiet</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>if INFO, DEBUG, and WARN should be logged</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.token","title":"<code>token = token</code>  <code>instance-attribute</code>","text":""},{"location":"api/client/#discord.client.Client.application_id","title":"<code>application_id = application_id</code>  <code>instance-attribute</code>","text":""},{"location":"api/client/#discord.client.Client.config","title":"<code>config = config</code>  <code>instance-attribute</code>","text":""},{"location":"api/client/#discord.client.Client.emojis","title":"<code>emojis = BotEmojis(self._http, self.application_id)</code>  <code>instance-attribute</code>","text":""},{"location":"api/client/#discord.client.Client.prefix_command","title":"<code>prefix_command</code>","text":"<p>Decorator registers prefix commands by the name of the function.</p> <p>Parameters:</p> <ul> <li> <code>func</code>               (<code>callable</code>)           \u2013            <p>callback handle for command response</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.component","title":"<code>component</code>","text":"<p>Decorator registers a function for a component handler.</p> <p>Parameters:</p> <ul> <li> <code>custom_id</code>               (<code>str</code>)           \u2013            <p>Identifier of the component </p> <p>Important</p> <p>Must match the <code>custom_id</code> set where the component was created.</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.command","title":"<code>command</code>","text":"<p>Decorator to register a function as a command handler.</p> <p>Parameters:</p> <ul> <li> <code>command</code>               (<code>SlashCommand | MessageCommand | UserCommand</code>)           \u2013            <p>The command to register.</p> </li> <li> <code>guild_ids</code>               (<code>list[int] | None</code>, default:                   <code>None</code> )           \u2013            <p>Guild IDs for guild-specific commands. None for global commands.</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.event","title":"<code>event</code>","text":"<p>Decorator registers a function for an event handler.</p> <p>Parameters:</p> <ul> <li> <code>event_name</code>               (<code>str</code>)           \u2013            <p>event name (must be a valid event)</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.setup_hook","title":"<code>setup_hook</code>","text":"<p>Decorator registers a setup hook.     (Runs once before the bot starts listening)</p> <p>Parameters:</p> <ul> <li> <code>func</code>               (<code>callable</code>)           \u2013            <p>callback to the setup function</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.shutdown_hook","title":"<code>shutdown_hook</code>","text":"<p>Decorator registers a shutdown hook.     (Runs once before the bot exits the loop)</p> <p>Parameters:</p> <ul> <li> <code>func</code>               (<code>callable</code>)           \u2013            <p>callback to the shutdown function</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.fetch_application","title":"<code>fetch_application</code>","text":"<p>Creates an interactable application resource.</p> <p>Parameters:</p> <ul> <li> <code>application_id</code>               (<code>int</code>)           \u2013            <p>id of target application</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Application</code>           \u2013            <p>the Application resource</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.fetch_guild","title":"<code>fetch_guild</code>","text":"<p>Creates an interactable guild resource.</p> <p>Parameters:</p> <ul> <li> <code>guild_id</code>               (<code>int</code>)           \u2013            <p>id of target guild</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Guild</code>           \u2013            <p>the Guild resource</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.fetch_channel","title":"<code>fetch_channel</code>","text":"<p>Creates an interactable channel resource.</p> <p>Parameters:</p> <ul> <li> <code>channel_id</code>               (<code>int</code>)           \u2013            <p>id of target channel</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Channel</code>           \u2013            <p>the Channel resource</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.fetch_message","title":"<code>fetch_message</code>","text":"<p>Creates an interactable message resource.</p> <p>Parameters:</p> <ul> <li> <code>message_id</code>               (<code>int</code>)           \u2013            <p>id of target message</p> </li> <li> <code>channel_id</code>               (<code>int</code>)           \u2013            <p>channel id of target message</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Message</code>           \u2013            <p>the Message resource</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.fetch_user","title":"<code>fetch_user</code>","text":"<p>Creates an interactable user resource.</p> <p>Parameters:</p> <ul> <li> <code>user_id</code>               (<code>int</code>)           \u2013            <p>id of target user</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>User</code>           \u2013            <p>the User resource</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.clear_guild_commands","title":"<code>clear_guild_commands</code>  <code>async</code>","text":"<p>Clear a guild's slash commands.</p> <p>Parameters:</p> <ul> <li> <code>guild_id</code>               (<code>int</code>)           \u2013            <p>id of the target guild</p> </li> </ul>"},{"location":"api/client/#discord.client.Client.run","title":"<code>run</code>","text":"<p>Starts the bot. Handles starting the session, WS, and heartbeat, reconnection logic, setting up emojis and hooks, and then listens for gateway events.</p>"},{"location":"api/commands/","title":"Commands API","text":""},{"location":"api/commands/#command-interactions","title":"Command Interactions","text":"<p>Note</p> <p>The following classes come from the <code>discord.parts.command</code> module.</p>"},{"location":"api/commands/#discord.parts.command.SlashCommand","title":"<code>SlashCommand</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p>"},{"location":"api/commands/#discord.parts.command.SlashCommand.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"api/commands/#discord.parts.command.SlashCommand.description","title":"<code>description: str</code>  <code>instance-attribute</code>","text":""},{"location":"api/commands/#discord.parts.command.SlashCommand.options","title":"<code>options: list[_CommandOption] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/commands/#discord.parts.command.SlashCommand.add_option","title":"<code>add_option</code>","text":"<p>Add an option to this slash command.</p> <p>Parameters:</p> <ul> <li> <code>command_type</code>               (<code>Literal['String', 'Integer', 'Boolean', 'User', 'Channel', 'Role', 'Mentionable', 'Number', 'Attachment']</code>)           \u2013            <p>input type for the option</p> </li> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>name of the option</p> </li> <li> <code>description</code>               (<code>str</code>)           \u2013            <p>description for the option</p> </li> <li> <code>required</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>if the option is required. Defaults to False.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>SlashCommand</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes","title":"<code>CommandOptionTypes</code>","text":"<p>Slash command option input types.</p>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes.STRING","title":"<code>STRING = 3</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>string (text)</p>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes.INTEGER","title":"<code>INTEGER = 4</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>integer (whole)</p>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes.BOOLEAN","title":"<code>BOOLEAN = 5</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>boolean (true/false)</p>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes.USER","title":"<code>USER = 6</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>user pangination</p>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes.CHANNEL","title":"<code>CHANNEL = 7</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>channel pangination</p>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes.ROLE","title":"<code>ROLE = 8</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>role pangination</p>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes.MENTIONABLE","title":"<code>MENTIONABLE = 9</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>any pangination (role, channel, user)</p>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes.NUMBER","title":"<code>NUMBER = 10</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>number (float, integer)</p>"},{"location":"api/commands/#discord.parts.command.CommandOptionTypes.ATTACHMENT","title":"<code>ATTACHMENT = 11</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>file upload</p>"},{"location":"api/commands/#discord.parts.command.MessageCommand","title":"<code>MessageCommand</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the message command object.</p>"},{"location":"api/commands/#discord.parts.command.MessageCommand.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"api/commands/#discord.parts.command.UserCommand","title":"<code>UserCommand</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the user command object</p>"},{"location":"api/commands/#discord.parts.command.UserCommand.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":""},{"location":"api/components/","title":"Components API","text":"<p>Note</p> <p>The following classes come from the <code>discord.parts.action_row</code> module.</p>"},{"location":"api/components/#discord.parts.action_row.ActionRow","title":"<code>ActionRow</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code>, <code>ContainerChild</code></p> <p>Represents a container of interactable components.</p>"},{"location":"api/components/#discord.parts.action_row.ActionRow.components","title":"<code>components: list[ActionRowChild] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.ActionRow.add_button","title":"<code>add_button</code>","text":"<p>Add a button to this action row. (5 per row)</p> <p>Parameters:</p> <ul> <li> <code>style</code>               (<code>Literal['Primary', 'Secondary', 'Success', 'Danger', 'Link']</code>)           \u2013            <p>button style as a string</p> </li> <li> <code>label</code>               (<code>str</code>)           \u2013            <p>button text</p> </li> <li> <code>custom_id</code>               (<code>str</code>)           \u2013            <p>developer-defined button ID</p> </li> <li> <code>emoji</code>               (<code>(str | EmojiModel, Optional)</code>, default:                   <code>None</code> )           \u2013            <p>str if unicode emoji, EmojiModal if custom</p> </li> <li> <code>disable</code>               (<code>(bool, Optional)</code>, default:                   <code>False</code> )           \u2013            <p>if this button should be pressable. Defaults to False.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ActionRow</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/components/#discord.parts.action_row.ActionRow.string_select","title":"<code>string_select</code>","text":"<p>Add a string select to this action row. (1 per row)</p> <p>Parameters:</p> <ul> <li> <code>select</code>               (<code>StringSelect</code>)           \u2013            <p>the StringSelect option object</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ActionRow</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/components/#discord.parts.action_row.ActionRow.user_select","title":"<code>user_select</code>","text":"<p>Add a user select to this action row. (1 per row)</p> <p>Parameters:</p> <ul> <li> <code>select</code>               (<code>UserSelect</code>)           \u2013            <p>the UserSelect option object</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ActionRow</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/components/#discord.parts.action_row.ActionRow.role_select","title":"<code>role_select</code>","text":"<p>Add a role select to this action row. (1 per row)</p> <p>Parameters:</p> <ul> <li> <code>select</code>               (<code>RoleSelect</code>)           \u2013            <p>the RoleSelect option object</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ActionRow</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/components/#discord.parts.action_row.ActionRow.channel_select","title":"<code>channel_select</code>","text":"<p>Add a channel select to this action row. (1 per row)</p> <p>Parameters:</p> <ul> <li> <code>select</code>               (<code>ChannelSelect</code>)           \u2013            <p>the ChannelSelect option object</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ActionRow</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/components/#discord.parts.action_row.ActionRow.mentionable_select","title":"<code>mentionable_select</code>","text":"<p>Add a mentionable select to this action row. (1 per row)</p> <p>Parameters:</p> <ul> <li> <code>select</code>               (<code>MentionableSelect</code>)           \u2013            <p>the MentionableSelect option object</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>ActionRow</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/components/#discord.parts.action_row.StringSelect","title":"<code>StringSelect</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code>, <code>ActionRowChild</code>, <code>LabelChild</code></p> <p>Represents the String Select component.</p>"},{"location":"api/components/#discord.parts.action_row.StringSelect.custom_id","title":"<code>custom_id: str</code>  <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.StringSelect.options","title":"<code>options: list[_SelectOption] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.StringSelect.placeholder","title":"<code>placeholder: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.StringSelect.min_values","title":"<code>min_values: Optional[int] = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.StringSelect.max_values","title":"<code>max_values: Optional[int] = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.StringSelect.required","title":"<code>required: Optional[bool] = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.StringSelect.disabled","title":"<code>disabled: Optional[bool] = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.StringSelect.add_option","title":"<code>add_option</code>","text":"<p>Add an option to this string select component.</p> <p>Parameters:</p> <ul> <li> <code>label</code>               (<code>str</code>)           \u2013            <p>option text</p> </li> <li> <code>value</code>               (<code>str</code>)           \u2013            <p>analogous to button's custom ID</p> </li> <li> <code>description</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>option subtext</p> </li> <li> <code>emoji</code>               (<code>str | EmojiModel</code>, default:                   <code>None</code> )           \u2013            <p>string if unicode emoji, EmojiModel if custom</p> </li> <li> <code>default</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>if this option should be the default option. Defaults to False.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>StringSelect</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/components/#discord.parts.action_row.UserSelect","title":"<code>UserSelect</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code>, <code>ActionRowChild</code></p> <p>Represents the User Select component.</p>"},{"location":"api/components/#discord.parts.action_row.UserSelect.custom_id","title":"<code>custom_id: str</code>  <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.UserSelect.placeholder","title":"<code>placeholder: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.UserSelect.default_values","title":"<code>default_values: list[_DefaultValue] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.UserSelect.min_values","title":"<code>min_values: Optional[int] = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.UserSelect.max_values","title":"<code>max_values: Optional[int] = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.UserSelect.disabled","title":"<code>disabled: Optional[bool] = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.UserSelect.add_default_value","title":"<code>add_default_value</code>","text":""},{"location":"api/components/#discord.parts.action_row.RoleSelect","title":"<code>RoleSelect</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code>, <code>ActionRowChild</code></p> <p>Represents the Role Select component.</p>"},{"location":"api/components/#discord.parts.action_row.RoleSelect.custom_id","title":"<code>custom_id: str</code>  <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.RoleSelect.placeholder","title":"<code>placeholder: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.RoleSelect.default_values","title":"<code>default_values: list[_DefaultValue] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.RoleSelect.min_values","title":"<code>min_values: Optional[int] = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.RoleSelect.max_values","title":"<code>max_values: Optional[int] = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.RoleSelect.disabled","title":"<code>disabled: Optional[bool] = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.RoleSelect.add_default_value","title":"<code>add_default_value</code>","text":""},{"location":"api/components/#discord.parts.action_row.ChannelSelect","title":"<code>ChannelSelect</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code>, <code>ActionRowChild</code></p> <p>Represents the Channel Select component.</p>"},{"location":"api/components/#discord.parts.action_row.ChannelSelect.custom_id","title":"<code>custom_id: str</code>  <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.ChannelSelect.placeholder","title":"<code>placeholder: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.ChannelSelect.default_values","title":"<code>default_values: list[_DefaultValue] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.ChannelSelect.min_values","title":"<code>min_values: Optional[int] = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.ChannelSelect.max_values","title":"<code>max_values: Optional[int] = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.ChannelSelect.disabled","title":"<code>disabled: Optional[bool] = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.ChannelSelect.add_default_value","title":"<code>add_default_value</code>","text":""},{"location":"api/components/#discord.parts.action_row.MentionableSelect","title":"<code>MentionableSelect</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code>, <code>ActionRowChild</code></p> <p>Represents the Mentionable Select component.</p>"},{"location":"api/components/#discord.parts.action_row.MentionableSelect.custom_id","title":"<code>custom_id: str</code>  <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.MentionableSelect.placeholder","title":"<code>placeholder: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.MentionableSelect.default_values","title":"<code>default_values: list[_DefaultValue] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.MentionableSelect.min_values","title":"<code>min_values: Optional[int] = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.MentionableSelect.max_values","title":"<code>max_values: Optional[int] = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.MentionableSelect.disabled","title":"<code>disabled: Optional[bool] = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/components/#discord.parts.action_row.MentionableSelect.add_default_value","title":"<code>add_default_value</code>","text":""},{"location":"api/embed/","title":"Embed (Legacy)","text":"<p>Note</p> <p>The following classes come from the <code>discord.parts.embed</code> module.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder","title":"<code>EmbedBuilder</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the Embed portion of a message.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.title","title":"<code>title: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>This embed's title.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.description","title":"<code>description: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>This embed's description.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.timestamp","title":"<code>timestamp: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Timestamp of when the embed was sent.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.color","title":"<code>color: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Embed's accent color.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.author","title":"<code>author: Optional[_EmbedAuthor] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Embed's author.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.thumbnail","title":"<code>thumbnail: Optional[_EmbedThumbnail] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Embed's thumbnail attachment.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.image","title":"<code>image: Optional[_EmbedImage] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Embed's image attachment.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.fields","title":"<code>fields: Optional[list[_EmbedField]] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>List of embed's fields.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.footer","title":"<code>footer: Optional[_EmbedFooter] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Embed's footer.</p>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.set_color","title":"<code>set_color</code>","text":"<p>Set this embed's color with a hex.</p> <p>Parameters:</p> <ul> <li> <code>hex</code>               (<code>str</code>)           \u2013            <p>color as a hex code (format: #FFFFFF)</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>EmbedBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.set_user_author","title":"<code>set_user_author</code>","text":"<p>Set this embed's author.</p> <p>Parameters:</p> <ul> <li> <code>user</code>               (<code>UserModel</code>)           \u2013            <p>the user model</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>EmbedBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.set_image","title":"<code>set_image</code>","text":"<p>Set this embed's image.</p> <p>Parameters:</p> <ul> <li> <code>url</code>               (<code>str</code>)           \u2013            <p>attachment:// scheme or http(s) URL <p>Returns:</p> <ul> <li> <code>EmbedBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.set_thumbnail","title":"<code>set_thumbnail</code>","text":"<p>Set this embed's thumbnail.</p> <p>Parameters:</p> <ul> <li> <code>url</code>               (<code>str</code>)           \u2013            <p>attachment:// scheme or http(s) URL <p>Returns:</p> <ul> <li> <code>EmbedBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.set_footer","title":"<code>set_footer</code>","text":"<p>Set this embed's footer.</p> <p>Parameters:</p> <ul> <li> <code>text</code>               (<code>str</code>)           \u2013            <p>footer's text</p> </li> <li> <code>icon_url</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>attachment:// scheme or http(s) URL. <p>Returns:</p> <ul> <li> <code>EmbedBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.add_field","title":"<code>add_field</code>","text":"<p>Add a field to this embed.</p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>field's title</p> </li> <li> <code>value</code>               (<code>str</code>)           \u2013            <p>field's text</p> </li> <li> <code>is_inline</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>if this field should be inlined</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>EmbedBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/embed/#discord.parts.embed.EmbedBuilder.set_timestamp","title":"<code>set_timestamp</code>","text":"<p>Set this embed's timestamp.</p> <p>Returns:</p> <ul> <li> <code>EmbedBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/intents/","title":"Intents","text":"<p>Note</p> <p>The following classes come from the <code>discord.intents</code> module.</p> <p>Important</p> <p>For unverified bots, privileged intents can only be used if your bot is in less than 100 guilds! Otherwise, your bot needs to be verified to use these intents.</p>"},{"location":"api/intents/#discord.intents.Intents","title":"<code>Intents</code>","text":"<p>Gateway intent flags (bitwise).     For an exhaustive list what intents let your bot listen to what events, see list of intents.</p> <p>Note</p> <p>Not all intents are listed. Intents not listed are not yet supported.</p>"},{"location":"api/intents/#discord.intents.Intents.GUILDS","title":"<code>GUILDS = 1 &lt;&lt; 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Receive events related to guilds.</p>"},{"location":"api/intents/#discord.intents.Intents.GUILD_MEMBERS","title":"<code>GUILD_MEMBERS = 1 &lt;&lt; 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Privileged Intent</p> <p>Requires the app setting <code>Server Members Intent</code> to be toggled.</p> <p>Receive events related to guild members.</p>"},{"location":"api/intents/#discord.intents.Intents.GUILD_EMOJIS_AND_STICKERS","title":"<code>GUILD_EMOJIS_AND_STICKERS = 1 &lt;&lt; 3</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Receive events related to custom emojis and stickers.</p>"},{"location":"api/intents/#discord.intents.Intents.GUILD_INTEGRATIONS","title":"<code>GUILD_INTEGRATIONS = 1 &lt;&lt; 4</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Receive events related to integrations within a guild.</p>"},{"location":"api/intents/#discord.intents.Intents.GUILD_WEBHOOKS","title":"<code>GUILD_WEBHOOKS = 1 &lt;&lt; 5</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Track webhook events within a guild.</p>"},{"location":"api/intents/#discord.intents.Intents.GUILD_MESSAGES","title":"<code>GUILD_MESSAGES = 1 &lt;&lt; 9</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Receive events about messages within a guild.</p>"},{"location":"api/intents/#discord.intents.Intents.GUILD_MESSAGE_REACTIONS","title":"<code>GUILD_MESSAGE_REACTIONS = 1 &lt;&lt; 10</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Track changes in reactions on messages.</p>"},{"location":"api/intents/#discord.intents.Intents.MESSAGE_CONTENT","title":"<code>MESSAGE_CONTENT = 1 &lt;&lt; 15</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Privileged Intent</p> <p>Requires the app setting <code>Message Content Intent</code> to be toggled.</p> <p>Access content of messages.</p>"},{"location":"api/intents/#discord.intents.Intents.DEFAULT","title":"<code>DEFAULT = GUILDS | GUILD_MESSAGES</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/intents/#discord.intents.set_intents","title":"<code>set_intents</code>","text":"<p>Set bot intents using <code>IntentFlagParams</code>. <code>Intents.DEFAULT</code> = (GUILDS | GUILD_MESSAGES) will also be set.</p> <p>Parameters:</p> <ul> <li> <code>flags</code>               (<code>Unpack[IntentFlagParams]</code>, default:                   <code>{}</code> )           \u2013            <p>intents to set. (set respective flag to True to toggle.)</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>ValueError</code>             \u2013            <p>invalid flag</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>int</code>           \u2013            <p>combined intents field</p> </li> </ul>"},{"location":"api/intents/#discord.intents.IntentFlagParams","title":"<code>IntentFlagParams</code>","text":"<p>               Bases: <code>TypedDict</code></p> <p>Gateway intent selection parameters.</p>"},{"location":"api/intents/#discord.intents.IntentFlagParams.guilds","title":"<code>guilds: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/intents/#discord.intents.IntentFlagParams.guild_members","title":"<code>guild_members: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/intents/#discord.intents.IntentFlagParams.guild_emojis_and_stickers","title":"<code>guild_emojis_and_stickers: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/intents/#discord.intents.IntentFlagParams.guild_integrations","title":"<code>guild_integrations: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/intents/#discord.intents.IntentFlagParams.guild_webhooks","title":"<code>guild_webhooks: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/intents/#discord.intents.IntentFlagParams.guild_messages","title":"<code>guild_messages: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/intents/#discord.intents.IntentFlagParams.guild_message_reactions","title":"<code>guild_message_reactions: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/intents/#discord.intents.IntentFlagParams.message_content","title":"<code>message_content: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/message/","title":"MessageBuilder","text":"<p>Note</p> <p>The following classes come from the <code>discord.parts.message</code> module.</p> <p>Note</p> <p>Each parameter maps directly to a constant in <code>MessageFlags</code>.</p>"},{"location":"api/message/#discord.parts.message.MessageBuilder","title":"<code>MessageBuilder</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Describes expected params when editing/creating a message.</p>"},{"location":"api/message/#discord.parts.message.MessageBuilder.content","title":"<code>content: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Message text content.</p>"},{"location":"api/message/#discord.parts.message.MessageBuilder.flags","title":"<code>flags: Optional[int] = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Message flags. See <code>MessageFlags</code> for details.</p>"},{"location":"api/message/#discord.parts.message.MessageBuilder.components","title":"<code>components: Optional[list[ActionRow | Container]] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Components to be attached to this message.</p>"},{"location":"api/message/#discord.parts.message.MessageBuilder.attachments","title":"<code>attachments: Optional[list[_Attachment]] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Attachments to be attached to this message.</p>"},{"location":"api/message/#discord.parts.message.MessageBuilder.embeds","title":"<code>embeds: Optional[list[EmbedBuilder]] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Embeds to be attached to this message.</p>"},{"location":"api/message/#discord.parts.message.MessageBuilder.message_reference","title":"<code>message_reference: Optional[_MessageReference] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Message reference if reply.</p>"},{"location":"api/message/#discord.parts.message.MessageBuilder.add_row","title":"<code>add_row</code>","text":"<p>Add an action row to this message.</p> <p>Parameters:</p> <ul> <li> <code>row</code>               (<code>ActionRow</code>)           \u2013            <p>the ActionRow object</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>MessageBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/message/#discord.parts.message.MessageBuilder.add_container","title":"<code>add_container</code>","text":"<p>Add a container to this message.</p> <p>Parameters:</p> <ul> <li> <code>container</code>               (<code>Container</code>)           \u2013            <p>the Container object.</p> </li> <li> <code>has_container_boarder</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>If message should be contained in an Embed-like container. Defaults to False.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>MessageBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/message/#discord.parts.message.MessageBuilder.add_embed","title":"<code>add_embed</code>","text":"<p>Add an embed to this message.</p> <p>Parameters:</p> <ul> <li> <code>embed</code>               (<code>EmbedBuilder</code>)           \u2013            <p>The EmbedBuilder object.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>MessageBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/message/#discord.parts.message.MessageBuilder.add_attachment","title":"<code>add_attachment</code>","text":"<p>Add an attachment to this message</p> <p>Parameters:</p> <ul> <li> <code>file_path</code>               (<code>str</code>)           \u2013            <p>full qualifying path to file</p> </li> <li> <code>description</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>file descriptor. Defaults to None.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>MessageBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/message/#discord.parts.message.MessageBuilder.set_flags","title":"<code>set_flags</code>","text":"<p>Set this message's flags using MessageFlagParams.</p> <p>Parameters:</p> <ul> <li> <code>flags</code>               (<code>Unpack[MessageFlagParams]</code>, default:                   <code>{}</code> )           \u2013            <p>message flags to set. (set respective flag to True to toggle.)</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>ValueError</code>             \u2013            <p>invalid flag</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>MessageBuilder</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/message/#discord.parts.message.MessageFlagParams","title":"<code>MessageFlagParams</code>","text":"<p>               Bases: <code>TypedDict</code></p> <p>Parameters for setting message flags.</p>"},{"location":"api/message/#discord.parts.message.MessageFlagParams.crossposted","title":"<code>crossposted: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/message/#discord.parts.message.MessageFlagParams.is_crosspost","title":"<code>is_crosspost: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/message/#discord.parts.message.MessageFlagParams.suppress_embeds","title":"<code>suppress_embeds: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/message/#discord.parts.message.MessageFlagParams.ephemeral","title":"<code>ephemeral: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/message/#discord.parts.message.MessageFlagParams.loading","title":"<code>loading: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/message/#discord.parts.message.MessageFlagParams.is_components_v2","title":"<code>is_components_v2: bool</code>  <code>instance-attribute</code>","text":""},{"location":"api/message/#discord.parts.message.MessageFlags","title":"<code>MessageFlags</code>","text":"<p>Flags that can be applied to a message.</p>"},{"location":"api/message/#discord.parts.message.MessageFlags.CROSSPOSTED","title":"<code>CROSSPOSTED = 1 &lt;&lt; 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Message has been published.</p>"},{"location":"api/message/#discord.parts.message.MessageFlags.IS_CROSSPOST","title":"<code>IS_CROSSPOST = 1 &lt;&lt; 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Message originated from another channel.</p>"},{"location":"api/message/#discord.parts.message.MessageFlags.SUPPRESS_EMBEDS","title":"<code>SUPPRESS_EMBEDS = 1 &lt;&lt; 2</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Hide embeds (if any).</p>"},{"location":"api/message/#discord.parts.message.MessageFlags.EPHEMERAL","title":"<code>EPHEMERAL = 1 &lt;&lt; 6</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Only visible to the invoking user.</p>"},{"location":"api/message/#discord.parts.message.MessageFlags.LOADING","title":"<code>LOADING = 1 &lt;&lt; 7</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Thinking response.</p>"},{"location":"api/message/#discord.parts.message.MessageFlags.IS_COMPONENTS_V2","title":"<code>IS_COMPONENTS_V2 = 1 &lt;&lt; 15</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>This message includes Discord's V2 Components.</p>"},{"location":"api/models/","title":"Discord Models","text":"<p>Note</p> <p>The following classes come from the <code>discord.models</code> package.</p>"},{"location":"api/models/#application","title":"Application","text":""},{"location":"api/models/#discord.models.application.ApplicationModel","title":"<code>ApplicationModel</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a bot application object.</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the app.</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":"<p>Name of the app.</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.icon","title":"<code>icon: str</code>  <code>instance-attribute</code>","text":"<p>Icon hash of the app.</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.description","title":"<code>description: str</code>  <code>instance-attribute</code>","text":"<p>Description of the app.</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.bot_public","title":"<code>bot_public: bool</code>  <code>instance-attribute</code>","text":"<p>If other users can add this app to a guild.</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.bot","title":"<code>bot: UserModel</code>  <code>instance-attribute</code>","text":"<p>Partial user obhect for the bot user associated with the app.</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.owner","title":"<code>owner: UserModel</code>  <code>instance-attribute</code>","text":"<p>Partial user object for the owner of the app.</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.guild_id","title":"<code>guild_id: int</code>  <code>instance-attribute</code>","text":"<p>Guild ID associated with the app (e.g., a support server).</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.guild","title":"<code>guild: GuildModel</code>  <code>instance-attribute</code>","text":"<p>Partial guild object of the associated guild.</p>"},{"location":"api/models/#discord.models.application.ApplicationModel.approximate_guild_count","title":"<code>approximate_guild_count: int</code>  <code>instance-attribute</code>","text":"<p>Approximate guild member count.</p>"},{"location":"api/models/#emoji","title":"Emoji","text":""},{"location":"api/models/#discord.models.emoji.EmojiModel","title":"<code>EmojiModel</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a Discord emoji.</p>"},{"location":"api/models/#discord.models.emoji.EmojiModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":"<p>Name of emoji.</p>"},{"location":"api/models/#discord.models.emoji.EmojiModel.id","title":"<code>id: int = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ID of the emoji (if custom).</p>"},{"location":"api/models/#discord.models.emoji.EmojiModel.animated","title":"<code>animated: bool = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the emoji is animated. Defaults to <code>False</code>.</p>"},{"location":"api/models/#discord.models.emoji.EmojiModel.mention","title":"<code>mention: str</code>  <code>property</code>","text":"<p>For use in message content.</p>"},{"location":"api/models/#discord.models.emoji.EmojiModel.api_code","title":"<code>api_code: str</code>  <code>property</code>","text":"<p>Return the correct API code for this emoji (URL-safe).</p>"},{"location":"api/models/#guild","title":"Guild","text":""},{"location":"api/models/#discord.models.guild.GuildModel","title":"<code>GuildModel</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a Discord guild.</p>"},{"location":"api/models/#discord.models.guild.GuildModel.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the guild.</p>"},{"location":"api/models/#discord.models.guild.GuildModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":"<p>Name of the guild.</p>"},{"location":"api/models/#discord.models.guild.GuildModel.icon","title":"<code>icon: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Icon hash of the guild.</p>"},{"location":"api/models/#discord.models.guild.GuildModel.emojis","title":"<code>emojis: list[EmojiModel] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>List of emojis reigstered in the guild.</p>"},{"location":"api/models/#discord.models.guild.GuildModel.approximate_member_count","title":"<code>approximate_member_count: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Approximate member count.</p>"},{"location":"api/models/#discord.models.guild.GuildModel.description","title":"<code>description: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Description of the guild.</p>"},{"location":"api/models/#discord.models.guild.ReadyGuildModel","title":"<code>ReadyGuildModel</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Guild info from Ready event.</p>"},{"location":"api/models/#discord.models.guild.ReadyGuildModel.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the associated guild.</p>"},{"location":"api/models/#discord.models.guild.ReadyGuildModel.unavailable","title":"<code>unavailable: bool</code>  <code>instance-attribute</code>","text":"<p>If the guild is offline.</p>"},{"location":"api/models/#integration","title":"Integration","text":""},{"location":"api/models/#discord.models.integration.IntegrationModel","title":"<code>IntegrationModel</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a guild integration.</p>"},{"location":"api/models/#discord.models.integration.IntegrationModel.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the integration.</p>"},{"location":"api/models/#discord.models.integration.IntegrationModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":"<p>Name of the integration.</p>"},{"location":"api/models/#discord.models.integration.IntegrationModel.enabled","title":"<code>enabled: bool</code>  <code>instance-attribute</code>","text":"<p>If the integration is enabled.</p>"},{"location":"api/models/#discord.models.integration.IntegrationModel.application","title":"<code>application: Optional[ApplicationModel] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The bot aaplication for Discord integrations.</p>"},{"location":"api/models/#member","title":"Member","text":""},{"location":"api/models/#discord.models.member.MemberModel","title":"<code>MemberModel</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a guild member.</p>"},{"location":"api/models/#discord.models.member.MemberModel.roles","title":"<code>roles: list[int]</code>  <code>instance-attribute</code>","text":"<p>List of roles registered to the guild member.</p>"},{"location":"api/models/#discord.models.member.MemberModel.user","title":"<code>user: UserModel</code>  <code>instance-attribute</code>","text":"<p>User data associated with the guild member.</p>"},{"location":"api/models/#discord.models.member.MemberModel.nick","title":"<code>nick: str</code>  <code>instance-attribute</code>","text":"<p>Server nickname of the guild member.</p>"},{"location":"api/models/#discord.models.member.MemberModel.avatar","title":"<code>avatar: str</code>  <code>instance-attribute</code>","text":"<p>Server avatar hash of the guild mmeber.</p>"},{"location":"api/models/#discord.models.member.MemberModel.joined_at","title":"<code>joined_at: str</code>  <code>instance-attribute</code>","text":"<p>ISO8601 timestamp of when the guild member joined server.</p>"},{"location":"api/models/#discord.models.member.MemberModel.deaf","title":"<code>deaf: bool</code>  <code>instance-attribute</code>","text":"<p>If the member is deaf in a VC (input).</p>"},{"location":"api/models/#discord.models.member.MemberModel.mute","title":"<code>mute: bool</code>  <code>instance-attribute</code>","text":"<p>If the member is muted in VC (output).</p>"},{"location":"api/models/#role","title":"Role","text":""},{"location":"api/models/#discord.models.role.RoleModel","title":"<code>RoleModel</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a Discord role.</p>"},{"location":"api/models/#discord.models.role.RoleModel.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the role.</p>"},{"location":"api/models/#discord.models.role.RoleModel.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":"<p>Name of the role.</p>"},{"location":"api/models/#discord.models.role.RoleModel.colors","title":"<code>colors: RoleColors</code>  <code>instance-attribute</code>","text":"<p>Colors of the role.</p>"},{"location":"api/models/#discord.models.role.RoleModel.hoist","title":"<code>hoist: bool</code>  <code>instance-attribute</code>","text":"<p>If the role is pinned in user listing.</p>"},{"location":"api/models/#discord.models.role.RoleModel.position","title":"<code>position: int</code>  <code>instance-attribute</code>","text":"<p>Position of the role.</p>"},{"location":"api/models/#discord.models.role.RoleModel.permissions","title":"<code>permissions: str</code>  <code>instance-attribute</code>","text":"<p>Permission bit set.</p>"},{"location":"api/models/#discord.models.role.RoleModel.managed","title":"<code>managed: bool</code>  <code>instance-attribute</code>","text":"<p>If the role is managed by an integration.</p>"},{"location":"api/models/#discord.models.role.RoleModel.mentionable","title":"<code>mentionable: bool</code>  <code>instance-attribute</code>","text":"<p>If the role is mentionable.</p>"},{"location":"api/models/#discord.models.role.RoleModel.flags","title":"<code>flags: int</code>  <code>instance-attribute</code>","text":"<p>Role flags combined as a bitfield.</p>"},{"location":"api/models/#discord.models.role.RoleModel.icon","title":"<code>icon: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Icon hash of the role.</p>"},{"location":"api/models/#discord.models.role.RoleModel.unicode_emoji","title":"<code>unicode_emoji: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Unicode emoji of the role.</p>"},{"location":"api/models/#user","title":"User","text":""},{"location":"api/models/#discord.models.user.UserModel","title":"<code>UserModel</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Describes the User object.</p>"},{"location":"api/models/#discord.models.user.UserModel.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the user.</p>"},{"location":"api/models/#discord.models.user.UserModel.username","title":"<code>username: str</code>  <code>instance-attribute</code>","text":"<p>Username of the user.</p>"},{"location":"api/models/#discord.models.user.UserModel.avatar","title":"<code>avatar: str</code>  <code>instance-attribute</code>","text":"<p>Avatar hash of the user.</p>"},{"location":"api/role/","title":"Discord Role","text":"<p>Note</p> <p>The following classes come from the <code>discord.parts.role</code> package.</p>"},{"location":"api/role/#discord.parts.role.Role","title":"<code>Role</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Parameters for creating/editing a role.</p>"},{"location":"api/role/#discord.parts.role.Role.colors","title":"<code>colors: RoleColors</code>  <code>instance-attribute</code>","text":"<p>Colors of the role.</p>"},{"location":"api/role/#discord.parts.role.Role.name","title":"<code>name: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Name of the role.</p>"},{"location":"api/role/#discord.parts.role.Role.permissions","title":"<code>permissions: int = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Permission bit set.</p>"},{"location":"api/role/#discord.parts.role.Role.hoist","title":"<code>hoist: bool = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the role is pinned in the user listing.</p>"},{"location":"api/role/#discord.parts.role.Role.mentionable","title":"<code>mentionable: bool = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the role is mentionable.</p>"},{"location":"api/role/#discord.parts.role.Role.unicode_emoji","title":"<code>unicode_emoji: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Unicode emoji of the role.</p>"},{"location":"api/role/#discord.parts.role.Role.set_color","title":"<code>set_color</code>","text":"<p>Set this role's color with a hex. (format: #FFFFFF)</p> <p>Parameters:</p> <ul> <li> <code>hex</code>               (<code>str</code>)           \u2013            <p>color as a hex code</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Role</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/role/#discord.parts.role.RoleColors","title":"<code>RoleColors</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Role color data.</p>"},{"location":"api/role/#discord.parts.role.RoleColors.primary_color","title":"<code>primary_color: int</code>  <code>instance-attribute</code>","text":"<p>Primary color of the role.</p>"},{"location":"api/role/#discord.parts.role.RoleColors.secondary_color","title":"<code>secondary_color: int</code>  <code>instance-attribute</code>","text":"<p>Secondary color of the role. Creates a gradient.</p>"},{"location":"api/role/#discord.parts.role.RoleColors.tertiary_color","title":"<code>tertiary_color: int</code>  <code>instance-attribute</code>","text":"<p>Tertiary color of the role. Creates a holographic style.</p>"},{"location":"api/ui_components/","title":"UI Components API (COMPONENTS_V2)","text":"<p>Note</p> <p>The following classes come from the <code>discord.parts.components_v2</code> module.</p> <p>Important</p> <p>Any message with Container components MUST HAVE the message flag <code>IS_COMPONENTS_V2</code>!</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Container","title":"<code>Container</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a container of display and interactable components.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.components","title":"<code>components: list[ContainerChild] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Child components that are encapsulated within the Container.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.accent_color","title":"<code>accent_color: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Color for the accent as an integer.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.spoiler","title":"<code>spoiler: Optional[bool] = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the container should be blurred out.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.set_color","title":"<code>set_color</code>","text":"<p>Set this container's color with a hex. (format: #FFFFFF)</p> <p>Parameters:</p> <ul> <li> <code>hex</code>               (<code>str</code>)           \u2013            <p>color as a hex code</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Container</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.add_row","title":"<code>add_row</code>","text":"<p>Add an action row to this container.</p> <p>Parameters:</p> <ul> <li> <code>row</code>               (<code>ActionRow</code>)           \u2013            <p>the ActionRow object</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Container</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.add_section","title":"<code>add_section</code>","text":"<p>Add a section to this container.</p> <p>Parameters:</p> <ul> <li> <code>section</code>               (<code>Section</code>)           \u2013            <p>the Section object</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Container</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.add_text_display","title":"<code>add_text_display</code>","text":"<p>Add a text display to this container.</p> <p>Parameters:</p> <ul> <li> <code>content</code>               (<code>str</code>)           \u2013            <p>the content to display</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Container</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.set_thumbnail","title":"<code>set_thumbnail</code>","text":"<p>Set the thumbnail for this container</p> <p>Parameters:</p> <ul> <li> <code>media</code>               (<code>str</code>)           \u2013            <p>Image data. http or attachment:// scheme. <li> <code>description</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>Alt text for the media</p> </li> <li> <code>has_spoiler</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>If the media should be blurred out. Defaults to False.</p> </li> <p>Returns:</p> <ul> <li> <code>Container</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.set_media_gallery","title":"<code>set_media_gallery</code>","text":"<p>Add a media gallery to this container.</p> <p>Parameters:</p> <ul> <li> <code>items</code>               (<code>list[MediaGalleryItem]</code>)           \u2013            <p>list of media gallery images</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Container</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.add_attachment","title":"<code>add_attachment</code>","text":"<p>Add a single attachment to this container.</p> <p>Parameters:</p> <ul> <li> <code>file</code>               (<code>str</code>)           \u2013            <p>Image data. http or attachment:// scheme <li> <code>has_spoiler</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>If the media should be blurred out. Defaults to False.</p> </li> <p>Returns:</p> <ul> <li> <code>Container</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/ui_components/#discord.parts.components_v2.Container.add_separator","title":"<code>add_separator</code>","text":"<p>Add a separator to this container. Positionally accurate.</p> <p>Parameters:</p> <ul> <li> <code>spacing</code>               (<code>Literal['Small', 'Large']</code>, default:                   <code>'Small'</code> )           \u2013            <p>size of separator padding. Defaults to 'Small'.</p> </li> <li> <code>has_divider</code>               (<code>bool</code>, default:                   <code>True</code> )           \u2013            <p>if a visual divider should be shown. Defaults to True.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Container</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/ui_components/#discord.parts.components_v2.Section","title":"<code>Section</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code>, <code>ContainerChild</code></p> <p>Represents the Section component.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Section.accessory","title":"<code>accessory: Optional[SectionAccessory] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/ui_components/#discord.parts.components_v2.Section.components","title":"<code>components: list[SectionChild] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":""},{"location":"api/ui_components/#discord.parts.components_v2.MediaGalleryItem","title":"<code>MediaGalleryItem</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the Media Gallery Item component.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.MediaGalleryItem.media","title":"<code>media: str</code>  <code>instance-attribute</code>","text":"<p>Image data. http or attachment:// scheme."},{"location":"api/ui_components/#discord.parts.components_v2.MediaGalleryItem.description","title":"<code>description: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Alt text for the media.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.MediaGalleryItem.spoiler","title":"<code>spoiler: Optional[bool] = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the media should be blurred out.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Label","title":"<code>Label</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the Discord Label component.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Label.label","title":"<code>label: str</code>  <code>instance-attribute</code>","text":"<p>Label text.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Label.component","title":"<code>component: LabelChild = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A component within the label.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Label.description","title":"<code>description: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>An optional description text for the label.</p>"},{"location":"api/ui_components/#discord.parts.components_v2.Label.string_select","title":"<code>string_select</code>","text":"<p>Set this label to be a string select component.</p> <p>Parameters:</p> <ul> <li> <code>select</code>               (<code>StringSelect</code>)           \u2013            <p>the string select component</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Label</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"api/ui_components/#discord.parts.components_v2.Label.text_input","title":"<code>text_input</code>","text":"<p>Set this label to be a text input component.</p> <p>Parameters:</p> <ul> <li> <code>custom_id</code>               (<code>str</code>)           \u2013            <p>developer-defined component ID</p> </li> <li> <code>min_length</code>               (<code>int</code>)           \u2013            <p>minimum number of characters required</p> </li> <li> <code>max_length</code>               (<code>int</code>)           \u2013            <p>maximum number of characters required</p> </li> <li> <code>value</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>component value</p> </li> <li> <code>style</code>               (<code>Literal['Short', 'Paragraph']</code>, default:                   <code>'Short'</code> )           \u2013            <p>text format. Defaults to 'Short'.</p> </li> <li> <code>placeholder</code>               (<code>str</code>, default:                   <code>None</code> )           \u2013            <p>custom placeholder text if empty</p> </li> <li> <code>require</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>if input is required. Defaults to False.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Label</code>           \u2013            <p>self</p> </li> </ul>"},{"location":"events/","title":"Overview of Events","text":""},{"location":"events/#welcome-to-the-events-section","title":"Welcome to the Events section!","text":"<p>This section is dedicated to the modeling of Discord's event payloads. Events are sent back when an event your bot is listening for is triggered (see Gateway Intents for more). These classes themselves have no methods and are used purely for reference.</p>"},{"location":"events/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Interaction - events related to interactions.</li> <li>Message - events related to messages.</li> <li>Channel - events related to channels.</li> <li>Guild - events related to guilds.</li> <li>Reaction - events related to reactions.</li> <li>Ready - the <code>READY</code> event sent when the bot goes online.</li> </ul>"},{"location":"events/channel/","title":"Channel Events","text":"<p>Note</p> <p>The following classes come from the <code>discord.events.channel_events</code> module.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelEvent","title":"<code>GuildChannelEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Base guild channel event.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelEvent.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the guild channel.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelEvent.guild_id","title":"<code>guild_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>Guild ID of the channel.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelEvent.position","title":"<code>position: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>Position of the channel within a category.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelEvent.name","title":"<code>name: Optional[str]</code>  <code>instance-attribute</code>","text":"<p>Name of the channel.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelEvent.topic","title":"<code>topic: Optional[str]</code>  <code>instance-attribute</code>","text":"<p>Topic of the channel.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelEvent.nsfw","title":"<code>nsfw: Optional[bool]</code>  <code>instance-attribute</code>","text":"<p>If this channel is flagged NSFW.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelEvent.last_message_id","title":"<code>last_message_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>ID of the last message sent in the channel.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelEvent.parent_id","title":"<code>parent_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>Category ID of the channel.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelCreateEvent","title":"<code>GuildChannelCreateEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>GuildChannelEvent</code></p> <p>Received when a guild channel has been created.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelUpdateEvent","title":"<code>GuildChannelUpdateEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>GuildChannelEvent</code></p> <p>Received when a guild channel has been updated.</p>"},{"location":"events/channel/#discord.events.channel_events.GuildChannelDeleteEvent","title":"<code>GuildChannelDeleteEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>GuildChannelEvent</code></p> <p>Received when a guild channel has been deleted.</p>"},{"location":"events/guild/","title":"Guild Events","text":"<p>Note</p> <p>The following classes come from the <code>discord.events.guild_events</code> module.</p>"},{"location":"events/guild/#discord.events.guild_events.GuildEvent","title":"<code>GuildEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Base guild event.</p>"},{"location":"events/guild/#discord.events.guild_events.GuildEvent.joined_at","title":"<code>joined_at: str</code>  <code>instance-attribute</code>","text":"<p>ISO8601 timestamp of when app joined the guild.</p>"},{"location":"events/guild/#discord.events.guild_events.GuildEvent.large","title":"<code>large: bool</code>  <code>instance-attribute</code>","text":"<p>If the guild is considered large.</p>"},{"location":"events/guild/#discord.events.guild_events.GuildEvent.member_count","title":"<code>member_count: int</code>  <code>instance-attribute</code>","text":"<p>Total number of members in the guild.</p>"},{"location":"events/guild/#discord.events.guild_events.GuildEvent.members","title":"<code>members: list[MemberModel]</code>  <code>instance-attribute</code>","text":"<p>Users in the guild.</p>"},{"location":"events/guild/#discord.events.guild_events.GuildEvent.channels","title":"<code>channels: list[Channel]</code>  <code>instance-attribute</code>","text":"<p>Channels in the guild.</p>"},{"location":"events/guild/#discord.events.guild_events.GuildCreateEvent","title":"<code>GuildCreateEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>GuildEvent</code></p> <p>Received when the bot has joined a guild.</p>"},{"location":"events/guild/#discord.events.guild_events.GuildUpdateEvent","title":"<code>GuildUpdateEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>GuildEvent</code></p> <p>Received when a guild has been edited.</p>"},{"location":"events/guild/#discord.events.guild_events.GuildDeleteEvent","title":"<code>GuildDeleteEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>GuildEvent</code></p> <p>Received when the bot has left a guild or the guild was deleted.</p>"},{"location":"events/interaction/","title":"Interaction Events","text":"<p>Note</p> <p>The following classes come from the <code>discord.events.interaction_events</code> module.</p>"},{"location":"events/interaction/#discord.events.interaction_events.InteractionEvent","title":"<code>InteractionEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the interaction response.</p>"},{"location":"events/interaction/#discord.events.interaction_events.InteractionEvent.interaction","title":"<code>interaction: Interaction</code>  <code>instance-attribute</code>","text":"<p>Interaction resource object. See <code>Interaction</code>.</p>"},{"location":"events/interaction/#discord.events.interaction_events.InteractionEvent.data","title":"<code>data: Optional[ApplicationCommandData | MessageComponentData | ModalData] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Interaction response data.</p>"},{"location":"events/interaction/#application-command","title":"Application Command","text":""},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandData","title":"<code>ApplicationCommandData</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the response from a command.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandData.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the command.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandData.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":"<p>Name of the command.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandData.guild_id","title":"<code>guild_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>ID of guild from which the command was invoked.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandData.target_id","title":"<code>target_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>ID of the user or message from which the command was invoked (message/user commands only).</p>"},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandData.options","title":"<code>options: Optional[list[ApplicationCommandOptionData]] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Options of the command (slash command only).</p>"},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandData.get_command_option_value","title":"<code>get_command_option_value</code>","text":"<p>Get the input for a command option by name.</p> <p>Parameters:</p> <ul> <li> <code>option_name</code>               (<code>str</code>)           \u2013            <p>option to fetch input from</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>ValueError</code>             \u2013            <p>invalid option name</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>str | int | float | bool</code>           \u2013            <p>input data of specified option</p> </li> </ul>"},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandOptionData","title":"<code>ApplicationCommandOptionData</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the response options from a slash command.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandOptionData.name","title":"<code>name: str</code>  <code>instance-attribute</code>","text":"<p>Name of the command option.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ApplicationCommandOptionData.value","title":"<code>value: str | int | float | bool</code>  <code>instance-attribute</code>","text":"<p>Input value for option.</p>"},{"location":"events/interaction/#message-component-data","title":"Message Component Data","text":""},{"location":"events/interaction/#discord.events.interaction_events.MessageComponentData","title":"<code>MessageComponentData</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the select response from a select component.</p>"},{"location":"events/interaction/#discord.events.interaction_events.MessageComponentData.custom_id","title":"<code>custom_id: str</code>  <code>instance-attribute</code>","text":"<p>Unique ID associated with the component.</p>"},{"location":"events/interaction/#discord.events.interaction_events.MessageComponentData.values","title":"<code>values: Optional[list[str]] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Select values (if any).</p>"},{"location":"events/interaction/#modal-component-data","title":"Modal Component Data","text":""},{"location":"events/interaction/#discord.events.interaction_events.ModalData","title":"<code>ModalData</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the modal response from a modal.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ModalData.custom_id","title":"<code>custom_id: str</code>  <code>instance-attribute</code>","text":"<p>Unique ID associated with the modal.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ModalData.components","title":"<code>components: list[ModalComponent] = field(default_factory=list)</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Components on the modal.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ModalData.get_modal_data","title":"<code>get_modal_data</code>","text":"<p>Fetch a modal field's data by its custom ID</p> <p>Parameters:</p> <ul> <li> <code>custom_id</code>               (<code>str</code>)           \u2013            <p>custom ID of field to fetch</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>ValueError</code>             \u2013            <p>invalid custom ID</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>str | list[str]</code>           \u2013            <p>component values (if string select) or value (if text input)</p> </li> </ul>"},{"location":"events/interaction/#discord.events.interaction_events.ModalComponent","title":"<code>ModalComponent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the modal component response from a modal.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ModalComponent.component","title":"<code>component: ModalComponentData</code>  <code>instance-attribute</code>","text":"<p>Data associated with the component.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ModalComponentData","title":"<code>ModalComponentData</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents the modal field response from a modal.</p>"},{"location":"events/interaction/#discord.events.interaction_events.ModalComponentData.value","title":"<code>value: Optional[str]</code>  <code>instance-attribute</code>","text":"<p>Text input value (Text Input component only).</p>"},{"location":"events/interaction/#discord.events.interaction_events.ModalComponentData.values","title":"<code>values: Optional[list[str]]</code>  <code>instance-attribute</code>","text":"<p>String select values (String Select component only).</p>"},{"location":"events/interaction/#discord.events.interaction_events.ModalComponentData.custom_id","title":"<code>custom_id: str</code>  <code>instance-attribute</code>","text":"<p>Unique ID associated with the component.</p>"},{"location":"events/message/","title":"Message Events","text":"<p>Note</p> <p>The following classes come from the <code>discord.events.message_events</code> module.</p>"},{"location":"events/message/#discord.events.message_events.MessageCreateEvent","title":"<code>MessageCreateEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Received when a message is created.</p>"},{"location":"events/message/#discord.events.message_events.MessageCreateEvent.message","title":"<code>message: Message</code>  <code>instance-attribute</code>","text":"<p>Message resource object. See <code>Resource.Message</code>.</p>"},{"location":"events/message/#discord.events.message_events.MessageCreateEvent.guild_id","title":"<code>guild_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>Guild ID of the updated message (if in a guild channel).</p>"},{"location":"events/message/#discord.events.message_events.MessageCreateEvent.member","title":"<code>member: Optional[MemberModel]</code>  <code>instance-attribute</code>","text":"<p>Partial Member object of the author of the message. See <code>MemberModel</code>.</p>"},{"location":"events/message/#discord.events.message_events.MessageUpdateEvent","title":"<code>MessageUpdateEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Received when a message is updated.</p>"},{"location":"events/message/#discord.events.message_events.MessageUpdateEvent.message","title":"<code>message: Message</code>  <code>instance-attribute</code>","text":"<p>Message resource object. See <code>Resource.Message</code>.</p>"},{"location":"events/message/#discord.events.message_events.MessageUpdateEvent.guild_id","title":"<code>guild_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>Guild ID of the updated message (if in a guild channel).</p>"},{"location":"events/message/#discord.events.message_events.MessageUpdateEvent.member","title":"<code>member: Optional[MemberModel]</code>  <code>instance-attribute</code>","text":"<p>Partial Member object of the author of the message. See <code>MemberModel</code>.</p>"},{"location":"events/message/#discord.events.message_events.MessageDeleteEvent","title":"<code>MessageDeleteEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Received when a message is deleted.</p>"},{"location":"events/message/#discord.events.message_events.MessageDeleteEvent.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the deleted message.</p>"},{"location":"events/message/#discord.events.message_events.MessageDeleteEvent.channel_id","title":"<code>channel_id: int</code>  <code>instance-attribute</code>","text":"<p>Channel ID of the deleted message.</p>"},{"location":"events/message/#discord.events.message_events.MessageDeleteEvent.guild_id","title":"<code>guild_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>Guild ID of the deleted message (if in a guild channel).</p>"},{"location":"events/reaction/","title":"Reaction Events","text":"<p>Note</p> <p>The following classes come from the <code>discord.events.reaction_events</code> module.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionAddEvent","title":"<code>ReactionAddEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Reaction added event.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionAddEvent.user_id","title":"<code>user_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of user who added the emoji.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionAddEvent.emoji","title":"<code>emoji: EmojiModel</code>  <code>instance-attribute</code>","text":"<p>Emoji used to react.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionAddEvent.channel_id","title":"<code>channel_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the channel where the reaction took place.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionAddEvent.message_id","title":"<code>message_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the message where the reaction took place.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionAddEvent.guild_id","title":"<code>guild_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>ID of the guild where the reaction took place (if in a guild).</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionAddEvent.burst","title":"<code>burst: bool</code>  <code>instance-attribute</code>","text":"<p>Whether the emoji is super.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionAddEvent.member","title":"<code>member: Optional[MemberModel]</code>  <code>instance-attribute</code>","text":"<p>Partial member object of the guild member that added the emoji (if in a guild).</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionAddEvent.message_author_id","title":"<code>message_author_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>ID of the user who sent the message where the reaction was added.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEvent","title":"<code>ReactionRemoveEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Reaction removed event.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEvent.user_id","title":"<code>user_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of user who removed their reaction.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEvent.emoji","title":"<code>emoji: EmojiModel</code>  <code>instance-attribute</code>","text":"<p>Emoji data of the emoji where the reaction was removed.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEvent.channel_id","title":"<code>channel_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the channel where the reaction was removed.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEvent.message_id","title":"<code>message_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the message where the reaction was removed.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEvent.guild_id","title":"<code>guild_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>ID of the guild where the reaction was removed (if in a guild).</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEvent.burst","title":"<code>burst: bool</code>  <code>instance-attribute</code>","text":"<p>If the emoji of the removed reaction is super.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveAllEvent","title":"<code>ReactionRemoveAllEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Remove all reactions event.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveAllEvent.channel_id","title":"<code>channel_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the channel where all reaction were removed.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveAllEvent.message_id","title":"<code>message_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the message where all reaction were removed.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveAllEvent.guild_id","title":"<code>guild_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>ID of the guild where all reaction were removed (if in a guild).</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEmojiEvent","title":"<code>ReactionRemoveEmojiEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>All reactions of a specific emoji removed.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEmojiEvent.emoji","title":"<code>emoji: EmojiModel</code>  <code>instance-attribute</code>","text":"<p>Emoji data of the removed reaction emoji.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEmojiEvent.channel_id","title":"<code>channel_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the channel where the reaction emoji was removed.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEmojiEvent.message_id","title":"<code>message_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the message where the reaction emoji was removed.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionRemoveEmojiEvent.guild_id","title":"<code>guild_id: Optional[int]</code>  <code>instance-attribute</code>","text":"<p>ID of the guild where the reaction emoji was removed. (if in a guild)</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionType","title":"<code>ReactionType</code>","text":"<p>Reaction types.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionType.NORMAL","title":"<code>NORMAL = 0</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A standard emoji.</p>"},{"location":"events/reaction/#discord.events.reaction_events.ReactionType.BURST","title":"<code>BURST = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>A super emoji.</p>"},{"location":"events/ready/","title":"Ready Event","text":"<p>Note</p> <p>The following classes come from the <code>discord.events.ready_event</code> module.</p>"},{"location":"events/ready/#discord.events.ready_event.ReadyEvent","title":"<code>ReadyEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Received when bot goes online.</p>"},{"location":"events/ready/#discord.events.ready_event.ReadyEvent.v","title":"<code>v: int</code>  <code>instance-attribute</code>","text":"<p>API version number.</p>"},{"location":"events/ready/#discord.events.ready_event.ReadyEvent.user","title":"<code>user: UserModel</code>  <code>instance-attribute</code>","text":"<p>Information about the user.</p>"},{"location":"events/ready/#discord.events.ready_event.ReadyEvent.guilds","title":"<code>guilds: list[ReadyGuildModel]</code>  <code>instance-attribute</code>","text":"<p>List of guilds bot is in.</p>"},{"location":"events/ready/#discord.events.ready_event.ReadyEvent.session_id","title":"<code>session_id: str</code>  <code>instance-attribute</code>","text":"<p>Used for resuming connections.</p>"},{"location":"events/ready/#discord.events.ready_event.ReadyEvent.resume_gateway_url","title":"<code>resume_gateway_url: str</code>  <code>instance-attribute</code>","text":"<p>Gateway URL for resuming connections.</p>"},{"location":"events/ready/#discord.events.ready_event.ReadyEvent.shard","title":"<code>shard: list[int]</code>  <code>instance-attribute</code>","text":"<p>Shard information associated with this session.</p>"},{"location":"events/ready/#discord.events.ready_event.ReadyEvent.application","title":"<code>application: ApplicationModel</code>  <code>instance-attribute</code>","text":"<p>Partial application object. Contains ID and flags.</p>"},{"location":"internals/","title":"Overview of Internals","text":""},{"location":"internals/#welcome-to-the-internals-section","title":"Welcome to the Internals section!","text":"<p>Internal API</p> <p>These classes are for internal use only.</p> <p>Users should interact with Client and other public API classes instead.</p> <p>This warning will be at the top of every page.</p>"},{"location":"internals/#lost-head-back-to-the-landing-page-silly","title":"Lost? Head back to the Landing Page, silly!","text":"<p>This section is dedicated to internal classes and structures. These classes work underneath the public interface and are not meant to be touched by the average user.</p> <p>Any breaks that occur from attempting to use the internals as a way of overriding default behavior is not a fault of this library!</p> <p>Proceed at your own risk!</p>"},{"location":"internals/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Data Model - parent class for hydrating child dataclasses with Discord's response payloads.</li> <li>HTTP - HTTP client session tools for managing HTTP requests with Discord with built-in rate limiting.</li> <li>Dispatchers - registers and responds to Discord events.</li> <li>Gateway - websocket tools for managing a websocket connection with Discord.</li> <li>Logger - logging tools for logging events.</li> <li>Discord Error - models Discord's API error structure and outputs a more readable message.</li> </ul>"},{"location":"internals/dispatchers/","title":"Dispatchers","text":"<p>Internal API</p> <p>These classes are for internal use only.</p> <p>Users should interact with Client and other public API classes instead.</p>"},{"location":"internals/dispatchers/#interaction-dispatcher","title":"Interaction Dispatcher","text":""},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher","title":"<code>CommandDispatcher</code>","text":"<p>Central hub for registering and dispatching interaction responses.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher.RESOURCE_MAP","title":"<code>RESOURCE_MAP = {InteractionTypes.APPLICATION_COMMAND: ApplicationCommandData, InteractionTypes.MESSAGE_COMPONENT: MessageComponentData, InteractionTypes.MODAL_SUBMIT: ModalData}</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Maps <code>InteractionTypes</code> to their respective dataclass.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher.application_id","title":"<code>application_id = client.application_id</code>  <code>instance-attribute</code>","text":"<p>Bot's application ID.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher.bot","title":"<code>bot = client</code>  <code>instance-attribute</code>","text":"<p>Bot session for user access to bot.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher._http","title":"<code>_http = client._http</code>  <code>instance-attribute</code>","text":"<p>HTTP session for requests.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher._logger","title":"<code>_logger = client._logger</code>  <code>instance-attribute</code>","text":"<p>Logger instance to log events.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher.config","title":"<code>config = client.config</code>  <code>instance-attribute</code>","text":""},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher._component_handlers","title":"<code>_component_handlers = {}</code>  <code>instance-attribute</code>","text":"<p>Mapping of component custom IDs to handler.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher._handlers","title":"<code>_handlers = {}</code>  <code>instance-attribute</code>","text":"<p>Mapping of command names to handler.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher._message_handlers","title":"<code>_message_handlers = {}</code>  <code>instance-attribute</code>","text":"<p>Mapping of message command names to handler.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher._user_handlers","title":"<code>_user_handlers = {}</code>  <code>instance-attribute</code>","text":"<p>Mapping of user command names to handler.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher._register_guild_commands","title":"<code>_register_guild_commands</code>  <code>async</code>","text":"<p>Registers a command at the guild level.</p> <p>Parameters:</p> <ul> <li> <code>commands</code>               (<code>dict</code>)           \u2013            <p>mapping of guild IDs to respective serialized command data</p> </li> </ul>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher._register_global_commands","title":"<code>_register_global_commands</code>  <code>async</code>","text":"<p>Registers a command at the global/bot level. (ALL GUILDS)</p> <p>Parameters:</p> <ul> <li> <code>commands</code>               (<code>list</code>)           \u2013            <p>list of serialized commands</p> </li> </ul>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher.command","title":"<code>command</code>","text":"<p>Decorator to register slash commands.</p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>name of the command to register</p> </li> <li> <code>handler</code>               (<code>callable</code>)           \u2013            <p>callback handle for command response</p> </li> </ul>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher.user_command","title":"<code>user_command</code>","text":"<p>Decorator to register user commands.</p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>name of the command to register</p> </li> <li> <code>handler</code>               (<code>callable</code>)           \u2013            <p>callback handle for user command response</p> </li> </ul>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher.message_command","title":"<code>message_command</code>","text":"<p>Decorator to register message commands.</p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>name of the command to register</p> </li> <li> <code>handler</code>               (<code>callable</code>)           \u2013            <p>callback handle for message command response</p> </li> </ul>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher.component","title":"<code>component</code>","text":"<p>Decorator to register component interactions.</p> <p>Parameters:</p> <ul> <li> <code>custom_id</code>               (<code>str</code>)           \u2013            <p>Identifier of the component </p> <p>Important</p> <p>Must match the <code>custom_id</code> set where the component was created.</p> </li> </ul>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.CommandDispatcher.dispatch","title":"<code>dispatch</code>  <code>async</code>","text":"<p>Dispatch a response to an <code>INTERACTION_CREATE</code> event</p> <p>Parameters:</p> <ul> <li> <code>data</code>               (<code>dict</code>)           \u2013            <p>interaction data</p> </li> </ul>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.InteractionTypes","title":"<code>InteractionTypes</code>","text":"<p>Interaction types constants.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.InteractionTypes.APPLICATION_COMMAND","title":"<code>APPLICATION_COMMAND = 2</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Slash command interaction.</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.InteractionTypes.MESSAGE_COMPONENT","title":"<code>MESSAGE_COMPONENT = 3</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Message component interaction (e.g., button, select menu, etc.).</p>"},{"location":"internals/dispatchers/#discord.dispatch.command_dispatcher.InteractionTypes.MODAL_SUBMIT","title":"<code>MODAL_SUBMIT = 5</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Modal submit interaction.</p>"},{"location":"internals/dispatchers/#event-dispatcher","title":"Event Dispatcher","text":""},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher","title":"<code>EventDispatcher</code>","text":"<p>Central hub for handling Discord Gateway events.</p>"},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher.RESOURCE_MAP","title":"<code>RESOURCE_MAP = {'READY': ('discord.events.ready_event', 'ReadyEvent'), 'GUILD_CREATE': ('discord.events.guild_events', 'GuildCreateEvent'), 'GUILD_UPDATE': ('discord.events.guild_events', 'GuildUpdateEvent'), 'GUILD_DELETE': ('discord.events.guild_events', 'GuildDeleteEvent'), 'CHANNEL_CREATE': ('discord.events.channel_events', 'GuildChannelCreateEvent'), 'CHANNEL_UPDATE': ('discord.events.channel_events', 'GuildChannelUpdateEvent'), 'CHANNEL_DELETE': ('discord.events.channel_events', 'GuildChannelDeleteEvent'), 'CHANNEL_PINS_UPDATE': ('discord.events.channel_events', 'ChannelPinsUpdateEvent'), 'MESSAGE_CREATE': ('discord.events.message_events', 'MessageCreateEvent'), 'MESSAGE_UPDATE': ('discord.events.message_events', 'MessageUpdateEvent'), 'MESSAGE_DELETE': ('discord.events.message_events', 'MessageDeleteEvent'), 'MESSAGE_REACTION_ADD': ('discord.events.reaction_events', 'ReactionAddEvent'), 'MESSAGE_REACTION_REMOVE': ('discord.events.reaction_events', 'ReactionRemoveEvent'), 'MESSAGE_REACTION_REMOVE_ALL': ('discord.events.reaction_events', 'ReactionRemoveAllEvent'), 'MESSAGE_REACTION_REMOVE_EMOJI': ('discord.events.reaction_events', 'ReactionRemoveEmojiEvent')}</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Mapping of event names to respective dataclass.</p>"},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher.application_id","title":"<code>application_id = client.application_id</code>  <code>instance-attribute</code>","text":"<p>Bot's ID.</p>"},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher.bot","title":"<code>bot = client</code>  <code>instance-attribute</code>","text":"<p>Top-level discord client.</p>"},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher._http","title":"<code>_http = client._http</code>  <code>instance-attribute</code>","text":"<p>HTTP session for requests.</p>"},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher._logger","title":"<code>_logger = client._logger</code>  <code>instance-attribute</code>","text":"<p>HTTP session for requests</p>"},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher.config","title":"<code>config = client.config</code>  <code>instance-attribute</code>","text":"<p>User-defined bot config for persistent data.</p>"},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher._handlers","title":"<code>_handlers = {}</code>  <code>instance-attribute</code>","text":"<p>Mapping of event names to handler.</p>"},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher.register","title":"<code>register</code>","text":"<p>Registers the given handler to the given event name.     (Event name must be a valid Discord event)</p> <p>Parameters:</p> <ul> <li> <code>event_name</code>               (<code>str</code>)           \u2013            <p>name of the event</p> </li> <li> <code>handler</code>               (<code>callable</code>)           \u2013            <p>callback to handle event</p> </li> </ul>"},{"location":"internals/dispatchers/#discord.dispatch.event_dispatcher.EventDispatcher.dispatch","title":"<code>dispatch</code>  <code>async</code>","text":"<p>Hydrate the corresponding dataclass and call the handler.</p> <p>Parameters:</p> <ul> <li> <code>event_name</code>               (<code>str</code>)           \u2013            <p>name of the event</p> </li> <li> <code>data</code>               (<code>dict</code>)           \u2013            <p>Discord's raw event payload</p> </li> </ul>"},{"location":"internals/dispatchers/#prefix-dispatcher-legacy","title":"Prefix Dispatcher (Legacy)","text":""},{"location":"internals/dispatchers/#discord.dispatch.prefix_dispatcher.PrefixDispatcher","title":"<code>PrefixDispatcher</code>","text":"<p>Handles text-based command messages that start with a specific prefix.</p>"},{"location":"internals/dispatchers/#discord.dispatch.prefix_dispatcher.PrefixDispatcher.bot","title":"<code>bot = client</code>  <code>instance-attribute</code>","text":"<p>Bot session for user access to bot.</p>"},{"location":"internals/dispatchers/#discord.dispatch.prefix_dispatcher.PrefixDispatcher._http","title":"<code>_http = client._http</code>  <code>instance-attribute</code>","text":"<p>HTTP session for requests.</p>"},{"location":"internals/dispatchers/#discord.dispatch.prefix_dispatcher.PrefixDispatcher._logger","title":"<code>_logger = client._logger</code>  <code>instance-attribute</code>","text":"<p>Logger instance to log events.</p>"},{"location":"internals/dispatchers/#discord.dispatch.prefix_dispatcher.PrefixDispatcher.prefix","title":"<code>prefix = prefix</code>  <code>instance-attribute</code>","text":"<p>User-defined command prefix.</p>"},{"location":"internals/dispatchers/#discord.dispatch.prefix_dispatcher.PrefixDispatcher.config","title":"<code>config = client.config</code>  <code>instance-attribute</code>","text":"<p>User-defined bot config for persistent data.</p>"},{"location":"internals/dispatchers/#discord.dispatch.prefix_dispatcher.PrefixDispatcher._handlers","title":"<code>_handlers = {}</code>  <code>instance-attribute</code>","text":"<p>Mapping of command prefix names to handler</p>"},{"location":"internals/dispatchers/#discord.dispatch.prefix_dispatcher.PrefixDispatcher.register","title":"<code>register</code>","text":"<p>Registers a handler for a command name (case-insensitive)</p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>name of handler (and command)</p> </li> <li> <code>handler</code>               (<code>callable</code>)           \u2013            <p>handler callback</p> </li> </ul>"},{"location":"internals/dispatchers/#discord.dispatch.prefix_dispatcher.PrefixDispatcher.dispatch","title":"<code>dispatch</code>  <code>async</code>","text":"<p>Hydrate the corresponding dataclass and call the handler.</p> <p>Parameters:</p> <ul> <li> <code>data</code>               (<code>dict</code>)           \u2013            <p>Discord's raw event payload</p> </li> </ul>"},{"location":"internals/error/","title":"DiscordError","text":"<p>Internal API</p> <p>These classes are for internal use only.</p> <p>Users should interact with Client and other public API classes instead.</p>"},{"location":"internals/error/#discord.error.DiscordError","title":"<code>DiscordError</code>","text":"<p>               Bases: <code>Exception</code></p> <p>Represents a Discord API error.</p> <p>Initialize the error with Discord's response.     Extracts reason, code, and walks the nested errors.</p> <p>Parameters:</p> <ul> <li> <code>data</code>               (<code>dict</code>)           \u2013            <p>Discord's error JSON</p> </li> </ul>"},{"location":"internals/error/#discord.error.DiscordError.data","title":"<code>data = data</code>  <code>instance-attribute</code>","text":"<p>Raw error data.</p>"},{"location":"internals/error/#discord.error.DiscordError.reason","title":"<code>reason = data.get('message', 'Unknown Error')</code>  <code>instance-attribute</code>","text":"<p>Discord-generated reason for error.</p>"},{"location":"internals/error/#discord.error.DiscordError.code","title":"<code>code = data.get('code', '???')</code>  <code>instance-attribute</code>","text":"<p>Discord-generated code of error.</p>"},{"location":"internals/error/#discord.error.DiscordError.error_data","title":"<code>error_data = data.get('errors', {})</code>  <code>instance-attribute</code>","text":"<p>Error-specific data.</p>"},{"location":"internals/error/#discord.error.DiscordError.details","title":"<code>details = self.walk(self.error_data)</code>  <code>instance-attribute</code>","text":"<p>Error details.</p>"},{"location":"internals/error/#discord.error.DiscordError.fatal","title":"<code>fatal = status in (401, 403)</code>  <code>instance-attribute</code>","text":"<p>If this error is considered fatal.</p>"},{"location":"internals/error/#discord.error.DiscordError.walk","title":"<code>walk</code>","text":"<p>Recursively traverses errors field to flatten nested validation errors into (path, message).</p> <p>Parameters:</p> <ul> <li> <code>node</code>               (<code>dict</code>)           \u2013            <p>current error level</p> </li> <li> <code>path</code>               (<code>tuple[str, str]</code>, default:                   <code>None</code> )           \u2013            <p>path to this error level</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>list</code>           \u2013            <p>list of errors</p> </li> </ul>"},{"location":"internals/gateway/","title":"Gateway","text":"<p>Internal API</p> <p>These classes are for internal use only.</p> <p>Users should interact with Client and other public API classes instead.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient","title":"<code>GatewayClient</code>","text":"<p>Handles real-time Websocket (WS) connection to Discord's Gateway. Connects to Discord's WS, handles identify/resume logic, and maintains heartbeat.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.token","title":"<code>token = token</code>  <code>instance-attribute</code>","text":"<p>The bot's token.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient._logger","title":"<code>_logger = logger</code>  <code>instance-attribute</code>","text":"<p>Logger instance to log events.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.ws","title":"<code>ws = None</code>  <code>instance-attribute</code>","text":"<p>Websocket instance.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.heartbeat","title":"<code>heartbeat = None</code>  <code>instance-attribute</code>","text":"<p>Heartbeat task instance.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.sequence","title":"<code>sequence = None</code>  <code>instance-attribute</code>","text":"<p>Discord-generated sequence number for this websocket connection.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.session_id","title":"<code>session_id = None</code>  <code>instance-attribute</code>","text":"<p>Discord-generated session ID for this websocket connection.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.intents","title":"<code>intents = intents</code>  <code>instance-attribute</code>","text":"<p>User-defined bot intents (for identify).</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.url_params","title":"<code>url_params = '?v=10&amp;encoding=json'</code>  <code>instance-attribute</code>","text":"<p>Discord WS query params.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.connect_url","title":"<code>connect_url = f'wss://gateway.discord.gg/'</code>  <code>instance-attribute</code>","text":"<p>URL to connect to Discord's gateway.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.connect","title":"<code>connect</code>  <code>async</code>","text":"<p>Established websocket connection to Discord.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.receive","title":"<code>receive</code>  <code>async</code>","text":"<p>Receives and logs messages from the gateway.</p> <p>Returns:</p> <ul> <li> <code>dict</code>           \u2013            <p>parsed JSON data</p> </li> </ul>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.send","title":"<code>send</code>  <code>async</code>","text":"<p>Sends a JSON-encoded message to the gateway.</p> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>dict</code>)           \u2013            <p>the message to send</p> </li> </ul>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.send_heartbeat_loop","title":"<code>send_heartbeat_loop</code>  <code>async</code>","text":"<p>Background task that sends heartbeat payloads in regular intervals. Retries until cancelled.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.identify","title":"<code>identify</code>  <code>async</code>","text":"<p>Sends the IDENIFY payload (token, intents, connection properties). Must be sent after connecting to the WS.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.start_heartbeat","title":"<code>start_heartbeat</code>  <code>async</code>","text":"<p>Waits for initial HELLO event, hydrates the HelloEvent class, and begins the heartbeat.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.reconnect","title":"<code>reconnect</code>  <code>async</code>","text":"<p>Sends RESUME payload to reconnect with the same session ID and sequence number as provided by Discord.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.close","title":"<code>close</code>  <code>async</code>","text":"<p>Cancels heart beat and cleanly closes WS with error handling.</p>"},{"location":"internals/gateway/#discord.gateway.GatewayClient.is_connected","title":"<code>is_connected</code>","text":"<p>Helper function to tell whether the websocket is still active.</p>"},{"location":"internals/gateway/#discord.events.hello_event.HelloEvent","title":"<code>HelloEvent</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Heartbeat interval event.</p>"},{"location":"internals/gateway/#discord.events.hello_event.HelloEvent.heartbeat_interval","title":"<code>heartbeat_interval: int</code>  <code>instance-attribute</code>","text":"<p>Heartbeat interval in milliseconds.</p>"},{"location":"internals/http/","title":"HTTP","text":"<p>Internal API</p> <p>These classes are for internal use only.</p> <p>Users should interact with Client and other public API classes instead.</p>"},{"location":"internals/http/#discord.http.HTTPClient","title":"<code>HTTPClient</code>","text":"<p>Handles all HTTP communication with Discord's API including rate-limiting by bucket and globally, async request handling, multipart/form-data file uploads, and error handling/retries.</p>"},{"location":"internals/http/#discord.http.HTTPClient.token","title":"<code>token = token</code>  <code>instance-attribute</code>","text":"<p>The bot's token.</p>"},{"location":"internals/http/#discord.http.HTTPClient._logger","title":"<code>_logger = logger</code>  <code>instance-attribute</code>","text":"<p>Logger instance to log events.</p>"},{"location":"internals/http/#discord.http.HTTPClient.session","title":"<code>session: aiohttp.ClientSession = None</code>  <code>instance-attribute</code>","text":"<p>Client session instance.</p>"},{"location":"internals/http/#discord.http.HTTPClient.global_reset","title":"<code>global_reset = 0</code>  <code>instance-attribute</code>","text":"<p>Global rete limit cooldown if a global rate limit is active.</p>"},{"location":"internals/http/#discord.http.HTTPClient.global_lock","title":"<code>global_lock: asyncio.Lock = None</code>  <code>instance-attribute</code>","text":"<p>Lock on queues to avoid race conditions.</p>"},{"location":"internals/http/#discord.http.HTTPClient.pending_queue","title":"<code>pending_queue: asyncio.Queue = None</code>  <code>instance-attribute</code>","text":"<p>Queue for requests not yet assigned to bucket.</p>"},{"location":"internals/http/#discord.http.HTTPClient.pending_worker","title":"<code>pending_worker: asyncio.Task = None</code>  <code>instance-attribute</code>","text":"<p>Task processing for the pending queue.</p>"},{"location":"internals/http/#discord.http.HTTPClient.endpoint_to_bucket","title":"<code>endpoint_to_bucket: dict[str, str] = {}</code>  <code>instance-attribute</code>","text":"<p>Maps endpoints to rate-limit buckets</p>"},{"location":"internals/http/#discord.http.HTTPClient.bucket_queues","title":"<code>bucket_queues: dict[str, RouteQueue] = {}</code>  <code>instance-attribute</code>","text":"<p>Maps endpoints to RouteQueue objects.</p>"},{"location":"internals/http/#discord.http.HTTPClient._sentinel","title":"<code>_sentinel = object()</code>  <code>instance-attribute</code>","text":"<p>Sentinel to terminate session.</p>"},{"location":"internals/http/#discord.http.HTTPClient.base_url","title":"<code>base_url = 'https://discord.com/api/v10'</code>  <code>instance-attribute</code>","text":"<p>Base URL for discord's API requests.</p>"},{"location":"internals/http/#discord.http.HTTPClient.start_session","title":"<code>start_session</code>  <code>async</code>","text":"<p>Initializes aiohttp session, queues, locks, and starting pending worker.</p>"},{"location":"internals/http/#discord.http.HTTPClient.request","title":"<code>request</code>  <code>async</code>","text":"<p>Enqueues request WRT rate-limit buckets.</p> <p>Parameters:</p> <ul> <li> <code>method</code>               (<code>str</code>)           \u2013            <p>HTTP method (e.g., POST, GET, DELETE, PATCH, etc.)</p> </li> <li> <code>endpoint</code>               (<code>str</code>)           \u2013            <p>Discord endpoint (e.g., /channels/123/messages)</p> </li> <li> <code>data</code>               (<code>dict</code>, default:                   <code>None</code> )           \u2013            <p>relevant data</p> </li> <li> <code>files</code>               (<code>list[str]</code>, default:                   <code>None</code> )           \u2013            <p>relevant files</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Future</code>           \u2013            <p>future with response</p> </li> </ul>"},{"location":"internals/http/#discord.http.HTTPClient._pending_worker","title":"<code>_pending_worker</code>  <code>async</code>","text":"<p>Processes requests from global pending queue.</p>"},{"location":"internals/http/#discord.http.HTTPClient._route_worker","title":"<code>_route_worker</code>  <code>async</code>","text":"<p>Processes request from specific rate-limit bucket.</p> <p>Parameters:</p> <ul> <li> <code>bucket</code>               (<code>str</code>)           \u2013            <p>endpoint</p> </li> </ul>"},{"location":"internals/http/#discord.http.HTTPClient._process_request","title":"<code>_process_request</code>  <code>async</code>","text":"<p>Core request execution. Handles headers, payload, files, retries, and bucket assignment.</p> <p>Parameters:</p> <ul> <li> <code>item</code>               (<code>RequestItem</code>)           \u2013            <p>incoming request</p> </li> </ul> <p>Raises:</p> <ul> <li> <code>DiscordError</code>             \u2013            <p>discord error object</p> </li> </ul>"},{"location":"internals/http/#discord.http.HTTPClient._handle_response","title":"<code>_handle_response</code>  <code>async</code>","text":"<p>Resolves future with parsed JSON/text response.</p> <p>Parameters:</p> <ul> <li> <code>item</code>               (<code>RequestItem</code>)           \u2013            <p>request data to handle</p> </li> <li> <code>resp</code>               (<code>ClientResponse</code>)           \u2013            <p>response for item</p> </li> </ul>"},{"location":"internals/http/#discord.http.HTTPClient._check_global_limit","title":"<code>_check_global_limit</code>  <code>async</code>","text":"<p>Waits if the global rate-limit is in effect.</p>"},{"location":"internals/http/#discord.http.HTTPClient.close_session","title":"<code>close_session</code>  <code>async</code>","text":"<p>Gracefully shuts down all workes and closes aiohttp session.</p>"},{"location":"internals/http/#discord.http.RouteQueue","title":"<code>RouteQueue</code>","text":"<p>Represents a queue of requests for a single rate-limit bucket. Manages task worker that processes requests for that bucket.</p>"},{"location":"internals/http/#discord.http.RouteQueue.queue","title":"<code>queue = asyncio.Queue()</code>  <code>instance-attribute</code>","text":"<p>Queue holding RequestItem for this bucket.</p>"},{"location":"internals/http/#discord.http.RouteQueue.worker","title":"<code>worker = None</code>  <code>instance-attribute</code>","text":"<p>Process for executing request for this bucket.</p>"},{"location":"internals/http/#discord.http.RequestItem","title":"<code>RequestItem</code>  <code>dataclass</code>","text":"<p>Data container representing an HTTP request to Discord's API. Used internally by HTTPClient for queuing and processing requests.</p>"},{"location":"internals/http/#discord.http.RequestItem.method","title":"<code>method: str</code>  <code>instance-attribute</code>","text":"<p>HTTP method (e.g., GET, POST, DELETE, PUT, PATCH)</p>"},{"location":"internals/http/#discord.http.RequestItem.url","title":"<code>url: str</code>  <code>instance-attribute</code>","text":"<p>Fully qualifying URL for this request.</p>"},{"location":"internals/http/#discord.http.RequestItem.endpoint","title":"<code>endpoint: str</code>  <code>instance-attribute</code>","text":"<p>Endpoint of the URL for this request.</p>"},{"location":"internals/http/#discord.http.RequestItem.data","title":"<code>data: dict | None</code>  <code>instance-attribute</code>","text":"<p>Relevant data for this request.</p>"},{"location":"internals/http/#discord.http.RequestItem.files","title":"<code>files: list | None</code>  <code>instance-attribute</code>","text":"<p>Relevant files for this request.</p>"},{"location":"internals/http/#discord.http.RequestItem.future","title":"<code>future: asyncio.Future</code>  <code>instance-attribute</code>","text":"<p>Track the result of this request.</p>"},{"location":"internals/logger/","title":"Logger","text":"<p>Internal API</p> <p>These classes are for internal use only.</p> <p>Users should interact with Client and other public API classes instead.</p> <p>Important</p> <p>If <code>quiet = dev_mode = True</code>: quiet OVERRIDES dev_mode. DEBUG will NOT print!</p>"},{"location":"internals/logger/#discord.logger.Logger","title":"<code>Logger</code>","text":"<p>A utility class for logging messages, supporting log levels, color-coded console output,  optional file logging, and redaction of sensitive information.</p> <p>Initializes logger. Opens log file 'bot.log' for writing.</p> <p>Parameters:</p> <ul> <li> <code>dev_mode</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>toggle debug messages. Defaults to False.</p> </li> <li> <code>quiet</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>(bool, optional): supress low-priority logs (INFO, DEBUG, WARN). Defaults to False.</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger.DEBUG","title":"<code>DEBUG = '\\x1b[36m'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Debug color: CYCAN</p>"},{"location":"internals/logger/#discord.logger.Logger.INFO","title":"<code>INFO = '\\x1b[32m'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Info color: GREEN</p>"},{"location":"internals/logger/#discord.logger.Logger.WARNING","title":"<code>WARNING = '\\x1b[33m'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Warning color: YELLOW</p>"},{"location":"internals/logger/#discord.logger.Logger.ERROR","title":"<code>ERROR = '\\x1b[31m'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Error color: RED</p>"},{"location":"internals/logger/#discord.logger.Logger.CRITICAL","title":"<code>CRITICAL = '\\x1b[41m'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Critical color: RED HIGHLIGHT</p>"},{"location":"internals/logger/#discord.logger.Logger.TIME","title":"<code>TIME = '\\x1b[90m'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Timestamp color: GRAY</p>"},{"location":"internals/logger/#discord.logger.Logger.RESET","title":"<code>RESET = '\\x1b[0m'</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Reset color: DEFAULT</p>"},{"location":"internals/logger/#discord.logger.Logger.fp","title":"<code>fp = open('bot.log', 'w', encoding='utf-8')</code>  <code>instance-attribute</code>","text":"<p>Log file for writing.</p>"},{"location":"internals/logger/#discord.logger.Logger.dev_mode","title":"<code>dev_mode = dev_mode</code>  <code>instance-attribute</code>","text":"<p>If debug logs should be printed.</p>"},{"location":"internals/logger/#discord.logger.Logger.quiet","title":"<code>quiet = quiet</code>  <code>instance-attribute</code>","text":"<p>If only high-level logs should be printed.</p>"},{"location":"internals/logger/#discord.logger.Logger.now","title":"<code>now</code>","text":"<p>Returns current timestamp</p> <p>Returns:</p> <ul> <li> <code>str</code>           \u2013            <p>timestamp formatted in YYYY-MM-DD HH:MM:SS</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger._log","title":"<code>_log</code>","text":"<p>Internal helper that writes formatted log to both file and console.</p> <p>Parameters:</p> <ul> <li> <code>level</code>               (<code>str</code>)           \u2013            <p>DEBUG, INFO, WARN, CRITICAL, ERROR</p> </li> <li> <code>color</code>               (<code>str</code>)           \u2013            <p>color specified by Logger properties</p> </li> <li> <code>message</code>               (<code>str</code>)           \u2013            <p>descriptive message to log</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger.log_debug","title":"<code>log_debug</code>","text":"<p>Logs a debug-level message.</p> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str</code>)           \u2013            <p>descriptive message to log</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger.log_info","title":"<code>log_info</code>","text":"<p>Logs a info-level message.</p> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str</code>)           \u2013            <p>descriptive message to log</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger.log_warn","title":"<code>log_warn</code>","text":"<p>Logs a warn-level message.</p> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str</code>)           \u2013            <p>descriptive message to log</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger.log_error","title":"<code>log_error</code>","text":"<p>Logs a error-level message.</p> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str</code>)           \u2013            <p>descriptive message to log</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger.log_critical","title":"<code>log_critical</code>","text":"<p>Logs a critical-level message.</p> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str</code>)           \u2013            <p>descriptive message to log</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger.log_high_priority","title":"<code>log_high_priority</code>","text":"<p>Always log this, regardless of quiet/dev_mode.</p> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str</code>)           \u2013            <p>descriptive message to log</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger.redact","title":"<code>redact</code>","text":"<p>Recusively redact sensitive fields (token, password, authorization, api_key) from data.</p> <p>Parameters:</p> <ul> <li> <code>data</code>               (<code>_type_</code>)           \u2013            <p>JSON to sanitize</p> </li> <li> <code>replacement</code>               (<code>str</code>, default:                   <code>'*** REDACTED ***'</code> )           \u2013            <p>what sensitive data is replaced with. Defaults to ' REDACTED '.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>dict</code>           \u2013            <p>sanitized JSON</p> </li> </ul>"},{"location":"internals/logger/#discord.logger.Logger.close","title":"<code>close</code>","text":"<p>Closes the log file.</p>"},{"location":"internals/model/","title":"Base Models","text":"<p>Internal API</p> <p>These classes are for internal use only.</p> <p>Users should interact with Client and other public API classes instead.</p>"},{"location":"internals/model/#discord.model.DataModel","title":"<code>DataModel</code>  <code>dataclass</code>","text":"<p>DataModel is a base class for Discord JSONs that provides hydration from raw dicts,  optional field defaults, and access to HTTP-bound methods.</p>"},{"location":"internals/model/#discord.model.DataModel.from_dict","title":"<code>from_dict</code>  <code>classmethod</code>","text":"<p>Hydrates the given data into the dataclass child.</p> <p>Parameters:</p> <ul> <li> <code>data</code>               (<code>dict</code>)           \u2013            <p>JSON data</p> </li> <li> <code>http</code>               (<code>HTTPClient</code>, default:                   <code>None</code> )           \u2013            <p>HTTP session for requests</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>dataclass</code>           \u2013            <p>hydrated dataclass</p> </li> </ul>"},{"location":"internals/model/#discord.model.DataModel._to_dict","title":"<code>_to_dict</code>","text":"<p>Recursively turns the dataclass into a dictionary and drops empty fields.</p> <p>Returns:</p> <ul> <li> <code>dict</code>           \u2013            <p>serialized dataclasss</p> </li> </ul>"},{"location":"resources/","title":"Overview of Resources","text":""},{"location":"resources/#welcome-to-the-resources-section","title":"Welcome to the Resources section!","text":"<p>This section is dedicated to modeling Discord's resources. These resources represent an object with methods to interact with itself. Resources need to be requested unless the resource is part of the event object. Resources act as a thin layer over the HTTP client handling requests internally. See Events for event-related details.</p>"},{"location":"resources/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Interaction - the interaction resource. This is where you respond to interactions.</li> <li>Message - the message resource. This is where you can create, edit, and delete a message.</li> <li>User - the user resource. This is where you can fetch information about a user or guild member.</li> <li>Channel - the channel resource. This is where you can create, edit, and delete a channel.</li> <li>Guild - the guild resource. This is where you can fetch information about a guild.</li> <li>Bot Emojis - data pertaining to bot-owned emojis. Treated like a resource.</li> <li>Application - the application resource. This is where you can fetch information about an application.</li> </ul>"},{"location":"resources/application/","title":"Application Resource","text":"<p>Note</p> <p>The following classes come from the <code>discord.resources.application</code> module.</p>"},{"location":"resources/application/#discord.resources.application.Application","title":"<code>Application</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a Discord application.</p>"},{"location":"resources/application/#discord.resources.application.Application.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.name","title":"<code>name: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Name of the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.icon","title":"<code>icon: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Icon hash of the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.description","title":"<code>description: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Description of the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.bot_public","title":"<code>bot_public: Optional[bool] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the application is public.</p>"},{"location":"resources/application/#discord.resources.application.Application.bot_require_code_grant","title":"<code>bot_require_code_grant: Optional[bool] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If full OAuth2 code grant is required.</p>"},{"location":"resources/application/#discord.resources.application.Application.bot","title":"<code>bot: Optional[UserModel] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Partial bot user object of the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.terms_of_service_url","title":"<code>terms_of_service_url: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Terms of Service URL of the application</p>"},{"location":"resources/application/#discord.resources.application.Application.privacy_policy","title":"<code>privacy_policy: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Privacy Policy URL of the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.owner","title":"<code>owner: Optional[UserModel] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Partial user object of the owner of the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.guild_id","title":"<code>guild_id: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Guild ID associated with the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.guild","title":"<code>guild: Optional[GuildModel] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Partial guild object of the associated guild.</p>"},{"location":"resources/application/#discord.resources.application.Application.cover_image","title":"<code>cover_image: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Image hash of rich presence invite cover.</p>"},{"location":"resources/application/#discord.resources.application.Application.flags","title":"<code>flags: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Public flags of the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.approximate_guild_count","title":"<code>approximate_guild_count: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Approximate guild count of the guilds that installed the application.</p>"},{"location":"resources/application/#discord.resources.application.Application.fetch","title":"<code>fetch</code>","text":"<p>Fetch this application's data.</p> <p>Returns:</p> <ul> <li> <code>Application</code>           \u2013            <p>the Application data</p> </li> </ul>"},{"location":"resources/application/#discord.resources.application.ApplicationFlags","title":"<code>ApplicationFlags</code>","text":"<p>Application flags (bitwise constants).</p>"},{"location":"resources/application/#discord.resources.application.ApplicationFlags.GATEWAY_PRESENCE","title":"<code>GATEWAY_PRESENCE = 1 &lt;&lt; 12</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Privileged intent to receive presence_update events.</p>"},{"location":"resources/application/#discord.resources.application.ApplicationFlags.GATEWAY_PRESENCE_LIMITED","title":"<code>GATEWAY_PRESENCE_LIMITED = 1 &lt;&lt; 13</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Intent to receive presence_update events.</p>"},{"location":"resources/application/#discord.resources.application.ApplicationFlags.GATEWAY_GUILD_MEMBERS","title":"<code>GATEWAY_GUILD_MEMBERS = 1 &lt;&lt; 14</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Privileged intent to receive member-related events.</p>"},{"location":"resources/application/#discord.resources.application.ApplicationFlags.GATEWAY_GUILD_MEMBERS_LIMITED","title":"<code>GATEWAY_GUILD_MEMBERS_LIMITED = 1 &lt;&lt; 15</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Intent to receive member-related events.</p>"},{"location":"resources/application/#discord.resources.application.ApplicationFlags.VERIFICATION_PENDING_GUILD_LIMIT","title":"<code>VERIFICATION_PENDING_GUILD_LIMIT = 1 &lt;&lt; 16</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Indicates unusual growth of an app that prevents verification.</p>"},{"location":"resources/application/#discord.resources.application.ApplicationFlags.GATEWAY_MESSAGE_CONTENT","title":"<code>GATEWAY_MESSAGE_CONTENT = 1 &lt;&lt; 18</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Privileged intent to receive message content.</p>"},{"location":"resources/application/#discord.resources.application.ApplicationFlags.GATEWAY_MESSAGE_CONTENT_LIMITED","title":"<code>GATEWAY_MESSAGE_CONTENT_LIMITED = 1 &lt;&lt; 19</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Intent to receive message content.</p>"},{"location":"resources/bot_emojis/","title":"Bot Emojis Resource","text":"<p>Note</p> <p>The following classes come from the <code>discord.resources.bot_emojis</code> module.</p>"},{"location":"resources/bot_emojis/#discord.resources.bot_emojis.BotEmojis","title":"<code>BotEmojis</code>","text":"<p>Represents a collection of the bot's emojis.</p>"},{"location":"resources/bot_emojis/#discord.resources.bot_emojis.BotEmojis.application_id","title":"<code>application_id = application_id</code>  <code>instance-attribute</code>","text":"<p>Bot's application ID.</p>"},{"location":"resources/bot_emojis/#discord.resources.bot_emojis.BotEmojis.fetch_all","title":"<code>fetch_all</code>  <code>async</code>","text":"<p>Fetches all the bot's emojis from its repository.</p>"},{"location":"resources/bot_emojis/#discord.resources.bot_emojis.BotEmojis.fetch","title":"<code>fetch</code>  <code>async</code>","text":"<p>Fetches a single emoji from the bot's repository.</p> <p>Parameters:</p> <ul> <li> <code>emoji_id</code>               (<code>int</code>)           \u2013            <p>the emoji's id</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>EmojiModel</code>           \u2013            <p>the new EmojiModel object with all fields populated</p> </li> </ul>"},{"location":"resources/bot_emojis/#discord.resources.bot_emojis.BotEmojis.get_emoji","title":"<code>get_emoji</code>","text":"<p>Get an emoji from this resource's cache by name.</p> <p>Parameters:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>name of the emoji</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>EmojiModel</code>           \u2013            <p>the new EmojiModel object with all fields populated</p> </li> </ul>"},{"location":"resources/channel/","title":"Channel Resource","text":"<p>Note</p> <p>The following classes come from the <code>discord.resources.channel</code> module.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel","title":"<code>Channel</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a Discord guild channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.guild_id","title":"<code>guild_id: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Guild ID of the channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.parent_id","title":"<code>parent_id: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Category ID of the channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.position","title":"<code>position: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Position of the channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.name","title":"<code>name: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Name of the channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.topic","title":"<code>topic: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Topic of the channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.nsfw","title":"<code>nsfw: Optional[bool] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the channel is flagged NSFW.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.last_message_id","title":"<code>last_message_id: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ID of the last message sent in the channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.last_pin_timestamp","title":"<code>last_pin_timestamp: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ISO8601 timestamp of the last pinned messsage in the channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.rate_limit_per_user","title":"<code>rate_limit_per_user: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Seconds user must wait between sending messages in the channel.</p>"},{"location":"resources/channel/#discord.resources.channel.Channel.fetch","title":"<code>fetch</code>  <code>async</code>","text":"<p>Fetch the full channel data from Discord.</p> <p>Returns:</p> <ul> <li> <code>Channel</code>           \u2013            <p>A new Channel object with all fields populated</p> </li> </ul>"},{"location":"resources/channel/#discord.resources.channel.Channel.fetch_messages","title":"<code>fetch_messages</code>  <code>async</code>","text":"<p>Fetches this channel's messages.</p> Permissions <ul> <li>VIEW_CHANNEL \u2192 required to access channel messages</li> <li>READ_MESSAGE_HISTORY \u2192 required for user, otherwise no messages are returned</li> </ul> <p>Parameters:</p> <ul> <li> <code>**kwargs</code>               (<code>Unpack[MessagesFetchParams]</code>, default:                   <code>{}</code> )           \u2013            <p>field-specific data</p> <p>Note</p> <p>if no kwargs are provided, default to 50 fetched messages limit.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>list[Message]</code>           \u2013            <p>queried messages</p> </li> </ul>"},{"location":"resources/channel/#discord.resources.channel.Channel.send","title":"<code>send</code>  <code>async</code>","text":"<p>Send a message to this channel.</p> Permissions <ul> <li>SEND_MESSAGES \u2192 required to create a message in this channel</li> </ul> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str | MessageBuilder</code>)           \u2013            <p>can be just text or the MessageBuilder for dynamic messages</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Message</code>           \u2013            <p>The created Message object</p> </li> </ul>"},{"location":"resources/channel/#discord.resources.channel.Channel.edit","title":"<code>edit</code>  <code>async</code>","text":"<p>Edit this channel's settings.</p> Permissions <ul> <li>MANAGE_CHANNELS \u2192 required to edit this channel</li> </ul> <p>Parameters:</p> <ul> <li> <code>channel</code>               (<code>GuildChannel</code>)           \u2013            <p>channel changes</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Channel</code>           \u2013            <p>The updated channel object</p> </li> </ul>"},{"location":"resources/channel/#discord.resources.channel.Channel.create_thread_from_message","title":"<code>create_thread_from_message</code>  <code>async</code>","text":"<p>Create a thread from this message</p> <p>Parameters:</p> <ul> <li> <code>message_id</code>               (<code>int</code>)           \u2013            <p>ID of message to attach thread</p> </li> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>thread name</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Channel</code>           \u2013            <p>The updated channel object</p> </li> </ul>"},{"location":"resources/channel/#discord.resources.channel.Channel.fetch_pins","title":"<code>fetch_pins</code>  <code>async</code>","text":"<p>Get this channel's pinned messages.</p> Permissions <ul> <li>VIEW_CHANNEL \u2192 required to access pinned messages</li> <li>READ_MESSAGE_HISTORY \u2192 required for reading pinned messages</li> </ul> <p>Parameters:</p> <ul> <li> <code>kwargs</code>               (<code>Unpack[PinsFetchParams]</code>, default:                   <code>{}</code> )           \u2013            <p>field-specific data</p> <p>Note</p> <p>If no kwargs are provided, default to 50 fetched messages limit.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>list[PinnedMessage]</code>           \u2013            <p>list of pinned messages</p> </li> </ul>"},{"location":"resources/channel/#discord.resources.channel.Channel.delete","title":"<code>delete</code>  <code>async</code>","text":"<p>Deletes this channel from the server.</p> Permissions <ul> <li>MANAGE_CHANNELS \u2192 required to delete this channel</li> </ul>"},{"location":"resources/channel/#discord.resources.channel.PinnedMessage","title":"<code>PinnedMessage</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Pinned message data.</p>"},{"location":"resources/channel/#discord.resources.channel.PinnedMessage.message","title":"<code>message: Message</code>  <code>instance-attribute</code>","text":"<p>Message resource of the pinned message.</p>"},{"location":"resources/channel/#discord.resources.channel.PinnedMessage.pinned_at","title":"<code>pinned_at: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ISO8601 timestamp of when the message was pinned.</p>"},{"location":"resources/channel/#discord.resources.channel.PinsFetchParams","title":"<code>PinsFetchParams</code>","text":"<p>               Bases: <code>TypedDict</code></p> <p>Params when fetching pinned messages.</p>"},{"location":"resources/channel/#discord.resources.channel.PinsFetchParams.before","title":"<code>before: str</code>  <code>instance-attribute</code>","text":"<p>Get pinned messages before this ISO8601 timestamp.</p>"},{"location":"resources/channel/#discord.resources.channel.PinsFetchParams.limit","title":"<code>limit: int</code>  <code>instance-attribute</code>","text":"<p>Max number of pinned messages to return. Range 1 - 50. Default 50.</p>"},{"location":"resources/channel/#discord.resources.channel.MessagesFetchParams","title":"<code>MessagesFetchParams</code>","text":"<p>               Bases: <code>TypedDict</code></p> <p>Params when fetching guild channel messages.</p>"},{"location":"resources/channel/#discord.resources.channel.MessagesFetchParams.limit","title":"<code>limit: int</code>  <code>instance-attribute</code>","text":"<p>Max number of messages to return. Range 1 - 100. Default 50.</p>"},{"location":"resources/channel/#discord.resources.channel.MessagesFetchParams.before","title":"<code>before: int</code>  <code>instance-attribute</code>","text":"<p>Get messages before this message ID.</p>"},{"location":"resources/channel/#discord.resources.channel.MessagesFetchParams.after","title":"<code>after: int</code>  <code>instance-attribute</code>","text":"<p>Get messages after this message ID.</p>"},{"location":"resources/channel/#discord.resources.channel.MessagesFetchParams.around","title":"<code>around: int</code>  <code>instance-attribute</code>","text":"<p>Get messages around this message ID.</p>"},{"location":"resources/guild/","title":"Guild Resource","text":"<p>Note</p> <p>The following classes come from the <code>discord.resources.guild</code> module.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild","title":"<code>Guild</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a Discord guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.name","title":"<code>name: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Name of the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.icon","title":"<code>icon: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Image hash of the guild's icon.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.splash","title":"<code>splash: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Image hash of the guild's splash.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.owner","title":"<code>owner: Optional[bool] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the member is the owner. (Get Current User Guilds)</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.owner_id","title":"<code>owner_id: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>OD of the owner of the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.roles","title":"<code>roles: list[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>List of IDs registered in the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.emojis","title":"<code>emojis: list[EmojiModel] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>List of emojis registered in the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.mfa_level","title":"<code>mfa_level: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Required MFA level of the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.application_id","title":"<code>application_id: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ID of the application if the guild is created by a bot.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.system_channel_id","title":"<code>system_channel_id: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Channel ID where system messages go (e.g., welcome messages, boost events).</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.system_channel_flags","title":"<code>system_channel_flags: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>System channel flags.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.rules_channel_id","title":"<code>rules_channel_id: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Channel ID where rules are posted.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.max_members","title":"<code>max_members: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Maximum member capacity for the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.description","title":"<code>description: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Description of the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.banner","title":"<code>banner: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Image hash of the guild's banner.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.preferred_locale","title":"<code>preferred_locale: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Preferred locale of the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.public_updates_channel_id","title":"<code>public_updates_channel_id: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Channel ID of announcement or public updates.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.approximate_member_count","title":"<code>approximate_member_count: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Approximate number of members in the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.nsfw_level","title":"<code>nsfw_level: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>NSFW level of the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.safety_alerts_channel_id","title":"<code>safety_alerts_channel_id: int = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Channel ID for safety alerts.</p>"},{"location":"resources/guild/#discord.resources.guild.Guild.fetch","title":"<code>fetch</code>  <code>async</code>","text":"<p>Fetch the Guild object by the given ID.</p> <p>Parameters:</p> <ul> <li> <code>kwargs</code>               (<code>Unpack[FetchGuildParams]</code>, default:                   <code>{}</code> )           \u2013            <p>field-specific data</p> <p>Note</p> <p>If no kwargs are provided, default to with_counts = False</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Guild</code>           \u2013            <p>the Guild object</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.fetch_channels","title":"<code>fetch_channels</code>  <code>async</code>","text":"<p>Fetch this guild's channels.</p> <p>Returns:</p> <ul> <li> <code>list[Channel]</code>           \u2013            <p>list of the guild's channels</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.create_channel","title":"<code>create_channel</code>  <code>async</code>","text":"<p>Create a channel in this guild.</p> Permissions <ul> <li>MANAGE_CHANNELS \u2192 required to create a channel</li> </ul> <p>Parameters:</p> <ul> <li> <code>channel</code>               (<code>GuildChannel</code>)           \u2013            <p>the buildable guild channel</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Channel</code>           \u2013            <p>the created channel</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.fetch_guild_member","title":"<code>fetch_guild_member</code>  <code>async</code>","text":"<p>Fetch a member in this guild.</p> <p>Important</p> <p>Requires the GUILD_MEMBERS privileged intent!</p> <p>Parameters:</p> <ul> <li> <code>user_id</code>               (<code>int</code>)           \u2013            <p>user id of the member to fetch</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>MemberModel</code>           \u2013            <p>member's data</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.fetch_guild_members","title":"<code>fetch_guild_members</code>  <code>async</code>","text":"<p>Fetch guild members in this guild.</p> <p>Important</p> <p>Requires the GUILD_MEMBERS privileged intent!</p> <p>Parameters:</p> <ul> <li> <code>**kwargs</code>               (<code>Unpack[FetchGuildMembersParams]</code>, default:                   <code>{}</code> )           \u2013            <p>field-specific data</p> <p>Note</p> <p>If no kwargs are provided, default to 1 guild member limit.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>list[MemberModel]</code>           \u2013            <p>list of member data</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.add_guild_member_role","title":"<code>add_guild_member_role</code>  <code>async</code>","text":"<p>Append a role to a guild member of this guild.</p> Permissions <ul> <li>MANAGE_ROLES \u2192 required to add a role to the user</li> </ul> <p>Parameters:</p> <ul> <li> <code>user_id</code>               (<code>int</code>)           \u2013            <p>id of the member for the role</p> </li> <li> <code>role_id</code>               (<code>int</code>)           \u2013            <p>id of the role to append</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.remove_guild_member_role","title":"<code>remove_guild_member_role</code>  <code>async</code>","text":"<p>Remove a role from a guild member of this guild.</p> Permissions <ul> <li>MANAGE_ROLES \u2192 required to remove a role from the user</li> </ul> <p>Parameters:</p> <ul> <li> <code>user_id</code>               (<code>int</code>)           \u2013            <p>id of the member with the role</p> </li> <li> <code>role_id</code>               (<code>int</code>)           \u2013            <p>id of the role to remove</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.fetch_guild_role","title":"<code>fetch_guild_role</code>  <code>async</code>","text":"<p>Fetch a role in this guild.</p> <p>Parameters:</p> <ul> <li> <code>role_id</code>               (<code>int</code>)           \u2013            <p>id of the role to fetch</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>RoleModel</code>           \u2013            <p>fetched role's data</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.fetch_guild_roles","title":"<code>fetch_guild_roles</code>  <code>async</code>","text":"<p>Fetch all roles in this guild.</p> <p>Returns:</p> <ul> <li> <code>list[RoleModel]</code>           \u2013            <p>list of fetched roles' data</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.create_guild_role","title":"<code>create_guild_role</code>  <code>async</code>","text":"<p>Create a role in this guild.</p> Permissions <ul> <li>MANAGE_ROLES \u2192 required to add a role to the guild</li> </ul> <p>Parameters:</p> <ul> <li> <code>role</code>               (<code>Role</code>)           \u2013            <p>role to create</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>RoleModel</code>           \u2013            <p>new role data</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.modify_guild_role","title":"<code>modify_guild_role</code>  <code>async</code>","text":"<p>Modify a role in this guild.</p> Permissions <ul> <li>MANAGE_ROLES \u2192 required to modify a role in the guild</li> </ul> <p>Parameters:</p> <ul> <li> <code>role</code>               (<code>Role</code>)           \u2013            <p>role with changes</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>RoleModel</code>           \u2013            <p>role with changes</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.Guild.delete_guild_role","title":"<code>delete_guild_role</code>  <code>async</code>","text":"<p>Delete a role in this guild.</p> Permissions <ul> <li>MANAGE_ROLES \u2192 required to delete a role in the guild</li> </ul> <p>Parameters:</p> <ul> <li> <code>role_id</code>               (<code>int</code>)           \u2013            <p>id of role to delete</p> </li> </ul>"},{"location":"resources/guild/#discord.resources.guild.FetchGuildParams","title":"<code>FetchGuildParams</code>","text":"<p>               Bases: <code>TypedDict</code></p> <p>Params when fetching a guild.</p>"},{"location":"resources/guild/#discord.resources.guild.FetchGuildParams.with_counts","title":"<code>with_counts: Optional[bool]</code>  <code>instance-attribute</code>","text":"<p>If True, return the approximate member and presence counts for the guild.</p>"},{"location":"resources/guild/#discord.resources.guild.FetchGuildMembersParams","title":"<code>FetchGuildMembersParams</code>","text":"<p>               Bases: <code>TypedDict</code></p> <p>Params when fetching guild members.</p>"},{"location":"resources/guild/#discord.resources.guild.FetchGuildMembersParams.limit","title":"<code>limit: int</code>  <code>instance-attribute</code>","text":"<p>Max number of members to return Range 1 - 1000. Default 1.</p>"},{"location":"resources/guild/#discord.resources.guild.FetchGuildMembersParams.after","title":"<code>after: int</code>  <code>instance-attribute</code>","text":"<p>Highest user id in previous page.</p>"},{"location":"resources/interaction/","title":"Interaction Resource","text":"<p>Note</p> <p>The following classes come from the <code>discord.resources.interaction</code> module.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction","title":"<code>Interaction</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>Represents a Discord Interaction object.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the interaction.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.token","title":"<code>token: str</code>  <code>instance-attribute</code>","text":"<p>Continuation token for responding to the interaction.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.channel_id","title":"<code>channel_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the channel where the interaction was sent.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.application_id","title":"<code>application_id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the application that owns the interaction.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.app_permissions","title":"<code>app_permissions: int</code>  <code>instance-attribute</code>","text":"<p>Bitwise set of permissions pertaining to the location of the interaction.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.member","title":"<code>member: MemberModel = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Guild member invoking the interaction.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.locale","title":"<code>locale: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Invoking user's locale.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.guild_locale","title":"<code>guild_locale: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Locale of the guild the interaction was invoked (if invoked in a guild).</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.guild_id","title":"<code>guild_id: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ID of guild the interaction was invoked (if invoked in a guild).</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.guild","title":"<code>guild: Optional[GuildModel] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Partial guild object of the guild the interaction was invoked (if invoked in a guild).</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.channel","title":"<code>channel: Optional[Channel] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Partial channel object the interaction was invoked.</p>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.respond","title":"<code>respond</code>  <code>async</code>","text":"<p>Create a message in response to an interaction.</p> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str | MessageBuilder</code>)           \u2013            <p>content as a string or from MessageBuilder</p> </li> <li> <code>with_response</code>               (<code>bool</code>, default:                   <code>False</code> )           \u2013            <p>if the interaction data should be returned. Defaults to False.</p> </li> </ul>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.update","title":"<code>update</code>  <code>async</code>","text":"<p>Update a message in response to an interaction.</p> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str | MessageBuilder</code>)           \u2013            <p>content as a string or from MessageBuilder</p> </li> </ul>"},{"location":"resources/interaction/#discord.resources.interaction.Interaction.respond_modal","title":"<code>respond_modal</code>  <code>async</code>","text":"<p>Create a modal in response to an interaction.</p> <p>Parameters:</p> <ul> <li> <code>modal</code>               (<code>ModalBuilder</code>)           \u2013            <p>modal data</p> </li> </ul>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionDataTypes","title":"<code>InteractionDataTypes</code>","text":"<p>Interaction data types constants.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionDataTypes.SLASH_COMMAND","title":"<code>SLASH_COMMAND = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The interaction is a slash command.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionDataTypes.USER_COMMAND","title":"<code>USER_COMMAND = 2</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The interaction is attached to a user.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionDataTypes.MESSAGE_COMMAND","title":"<code>MESSAGE_COMMAND = 3</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>The interaction is attached to a message.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionCallbackTypes","title":"<code>InteractionCallbackTypes</code>","text":"<p>Interaction callback types constants.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionCallbackTypes.PONG","title":"<code>PONG = 1</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Acknowledge a Ping.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionCallbackTypes.CHANNEL_MESSAGE_WITH_SOURCE","title":"<code>CHANNEL_MESSAGE_WITH_SOURCE = 4</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Respond to an interaction with a message.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionCallbackTypes.DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE","title":"<code>DEFERRED_CHANNEL_MESSAGE_WITH_SOURCE = 5</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Acknowledge an interaction and edit a response later. User sees a loading state.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionCallbackTypes.DEFERRED_UPDATE_MESSAGE","title":"<code>DEFERRED_UPDATE_MESSAGE = 6</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Acknowledge an interaction and edit the original message later.  The user does NOT see a loading state. (Components only)</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionCallbackTypes.UPDATE_MESSAGE","title":"<code>UPDATE_MESSAGE = 7</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Edit the message in which the component was attached.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionCallbackTypes.APPLICATION_COMMAND_AUTOCOMPLETE_RESULT","title":"<code>APPLICATION_COMMAND_AUTOCOMPLETE_RESULT = 8</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Respond to an autocomplete interaction with suggested choices.</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionCallbackTypes.MODAL","title":"<code>MODAL = 9</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Respond to an interaction with a popup modal (not available for MODAL_SUBMIT and PING interactions).</p>"},{"location":"resources/interaction/#discord.resources.interaction.InteractionCallbackTypes.LAUNCH_ACTIVITY","title":"<code>LAUNCH_ACTIVITY = 12</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Launch an activity associated with the app (Activities must be enabled).</p>"},{"location":"resources/message/","title":"Message Resource","text":"<p>Note</p> <p>The following classes come from the <code>discord.resources.message</code> module.</p>"},{"location":"resources/message/#discord.resources.message.Message","title":"<code>Message</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>A Discord message.</p>"},{"location":"resources/message/#discord.resources.message.Message.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the message</p>"},{"location":"resources/message/#discord.resources.message.Message.channel_id","title":"<code>channel_id: int</code>  <code>instance-attribute</code>","text":"<p>Channel ID of the message.</p>"},{"location":"resources/message/#discord.resources.message.Message.author","title":"<code>author: UserModel = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>User data of author of the message.</p>"},{"location":"resources/message/#discord.resources.message.Message.content","title":"<code>content: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Content of the message.</p>"},{"location":"resources/message/#discord.resources.message.Message.pinned","title":"<code>pinned: bool = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the message is pinned.</p>"},{"location":"resources/message/#discord.resources.message.Message.webhook_id","title":"<code>webhook_id: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>ID of the webhook if the message is a webhook.</p>"},{"location":"resources/message/#discord.resources.message.Message.fetch","title":"<code>fetch</code>  <code>async</code>","text":"<p>Fetches the message data based on the given channel id and message id.</p> <p>Returns:</p> <ul> <li> <code>Message</code>           \u2013            <p>the message object</p> </li> </ul>"},{"location":"resources/message/#discord.resources.message.Message.send","title":"<code>send</code>  <code>async</code>","text":"<p>Sends a new message to the current channel.</p> Permissions <ul> <li>SEND_MESSAGES \u2192 required to senf your own messages</li> </ul> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str | MessageBuilder</code>)           \u2013            <p>can be just text or the MessageBuilder for dynamic messages</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>Message</code>           \u2013            <p>the new Message object with all fields populated</p> </li> </ul>"},{"location":"resources/message/#discord.resources.message.Message.edit","title":"<code>edit</code>  <code>async</code>","text":"<p>Edits this message.</p> Permissions <ul> <li>MANAGE_MESSAGES \u2192 ONLY if editing another user's message</li> </ul> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str | MessageBuilder</code>)           \u2013            <p>can be just text or the MessageBuilder for dynamic messages</p> </li> </ul>"},{"location":"resources/message/#discord.resources.message.Message.reply","title":"<code>reply</code>  <code>async</code>","text":"<p>Reply to this message with a new message.</p> Permissions <ul> <li>SEND_MESSAGES \u2192 required to send the message</li> </ul> <p>Parameters:</p> <ul> <li> <code>message</code>               (<code>str | MessageBuilder</code>)           \u2013            <p>the new message</p> </li> </ul>"},{"location":"resources/message/#discord.resources.message.Message.crosspost","title":"<code>crosspost</code>  <code>async</code>","text":"<p>Crosspost this message in an Annoucement channel to all following channels.</p> Permissions <ul> <li>SEND_MESSAGES \u2192 required to publish your own messages</li> <li>MANAGE_MESSAGES \u2192 required to publish messages from others</li> </ul> <p>Returns:</p> <ul> <li> <code>Message</code>           \u2013            <p>the published (crossposted) message</p> </li> </ul>"},{"location":"resources/message/#discord.resources.message.Message.delete","title":"<code>delete</code>  <code>async</code>","text":"<p>Deletes this message.</p>"},{"location":"resources/message/#discord.resources.message.Message.add_reaction","title":"<code>add_reaction</code>  <code>async</code>","text":"<p>Add a reaction from this message.</p> Permissions <ul> <li>READ_MESSAGE_HISTORY \u2192 required to view message</li> <li>ADD_REACTIONS \u2192 required to create reaction</li> </ul> <p>Parameters:</p> <ul> <li> <code>emoji</code>               (<code>EmojiModel | str</code>)           \u2013            <p>the standard emoji (str) or custom emoji (EmojiModel)</p> </li> </ul>"},{"location":"resources/message/#discord.resources.message.Message.remove_reaction","title":"<code>remove_reaction</code>  <code>async</code>","text":"<p>Remove the bot's reaction from this message.</p> <p>Parameters:</p> <ul> <li> <code>emoji</code>               (<code>EmojiModel | str</code>)           \u2013            <p>the standard emoji (str) or custom emoji (EmojiModel)</p> </li> </ul>"},{"location":"resources/message/#discord.resources.message.Message.remove_user_reaction","title":"<code>remove_user_reaction</code>  <code>async</code>","text":"<p>Remove a specific user's reaction from this message.</p> Permissions <ul> <li>MANAGE_MESSAGES \u2192 required to remove another user's reaction</li> </ul> <p>Parameters:</p> <ul> <li> <code>emoji</code>               (<code>EmojiModel | str</code>)           \u2013            <p>the standard emoji (str) or custom emoji (EmojiModel)</p> </li> <li> <code>user_id</code>               (<code>int</code>)           \u2013            <p>user's ID</p> </li> </ul>"},{"location":"resources/message/#discord.resources.message.Message.remove_all_reactions","title":"<code>remove_all_reactions</code>  <code>async</code>","text":"<p>Clear all reactions from this message.</p> Permissions <ul> <li>MANAGE_MESSAGES \u2192 required to remove all reaction</li> </ul>"},{"location":"resources/message/#discord.resources.message.Message.pin","title":"<code>pin</code>  <code>async</code>","text":"<p>Pin this message to its channel's pins.</p>"},{"location":"resources/message/#discord.resources.message.Message.unpin","title":"<code>unpin</code>  <code>async</code>","text":"<p>Unpin this message from its channel's pins.</p>"},{"location":"resources/user/","title":"User Resource","text":"<p>Note</p> <p>The following classes come from the <code>discord.resources.user</code> module.</p>"},{"location":"resources/user/#discord.resources.user.User","title":"<code>User</code>  <code>dataclass</code>","text":"<p>               Bases: <code>DataModel</code></p> <p>A Discord user.</p>"},{"location":"resources/user/#discord.resources.user.User.id","title":"<code>id: int</code>  <code>instance-attribute</code>","text":"<p>ID of the user.</p>"},{"location":"resources/user/#discord.resources.user.User.username","title":"<code>username: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Username of the user.</p>"},{"location":"resources/user/#discord.resources.user.User.discriminator","title":"<code>discriminator: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Discriminator of the user (#XXXX)</p>"},{"location":"resources/user/#discord.resources.user.User.global_name","title":"<code>global_name: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Global name of the user.</p>"},{"location":"resources/user/#discord.resources.user.User.avatar","title":"<code>avatar: str = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Image hash of the user's avatar.</p>"},{"location":"resources/user/#discord.resources.user.User.bot","title":"<code>bot: Optional[bool] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the user is a bot.</p>"},{"location":"resources/user/#discord.resources.user.User.system","title":"<code>system: Optional[bool] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>If the user belongs to an OAuth2 application.</p>"},{"location":"resources/user/#discord.resources.user.User.mfa_enabled","title":"<code>mfa_enabled: Optional[bool] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether the user has two factor enabled.</p>"},{"location":"resources/user/#discord.resources.user.User.banner","title":"<code>banner: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Image hash of the user's banner.</p>"},{"location":"resources/user/#discord.resources.user.User.accent_color","title":"<code>accent_color: Optional[int] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Color of user's banner represented as an integer.</p>"},{"location":"resources/user/#discord.resources.user.User.locale","title":"<code>locale: Optional[str] = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Chosen language option of the user.</p>"},{"location":"resources/user/#discord.resources.user.User.fetch","title":"<code>fetch</code>  <code>async</code>","text":"<p>Fetch this user by ID.</p> <p>Note</p> <p>Fetch includes both /users/@me AND /users/{user.id}!</p> <p>Returns:</p> <ul> <li> <code>User</code>           \u2013            <p>the User object</p> </li> </ul>"},{"location":"resources/user/#discord.resources.user.User.fetch_guilds","title":"<code>fetch_guilds</code>  <code>async</code>","text":"<p>Fetch this user's guilds.</p> <p>Important</p> <p>Requires the OAuth2 guilds scope!</p> <p>Parameters:</p> <ul> <li> <code>kwargs</code>               (<code>Unpack[FetchUserGuildsParams]</code>, default:                   <code>{}</code> )           \u2013            <p>Field-specific data</p> <p>Note</p> <p>If no kwargs are provided, default to 200 guilds limit.</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>list[GuildModel]</code>           \u2013            <p>each guild's data</p> </li> </ul>"},{"location":"resources/user/#discord.resources.user.User.fetch_guild_member","title":"<code>fetch_guild_member</code>  <code>async</code>","text":"<p>Fetch this user's guild member data.</p> <p>Important</p> <p>Requires the OAuth2 guilds.members.read scope!</p> <p>Parameters:</p> <ul> <li> <code>guild_id</code>               (<code>int</code>)           \u2013            <p>id of guild to fetch data from</p> </li> </ul> <p>Returns:</p> <ul> <li> <code>MemberModel</code>           \u2013            <p>member data from guild</p> </li> </ul>"},{"location":"resources/user/#discord.resources.user.FetchUserGuildsParams","title":"<code>FetchUserGuildsParams</code>","text":"<p>               Bases: <code>TypedDict</code></p>"},{"location":"resources/user/#discord.resources.user.FetchUserGuildsParams.before","title":"<code>before: int</code>  <code>instance-attribute</code>","text":"<p>Get guilds before this guild ID.</p>"},{"location":"resources/user/#discord.resources.user.FetchUserGuildsParams.after","title":"<code>after: int</code>  <code>instance-attribute</code>","text":"<p>Get guilds after this guild ID.</p>"},{"location":"resources/user/#discord.resources.user.FetchUserGuildsParams.limit","title":"<code>limit: int</code>  <code>instance-attribute</code>","text":"<p>Max number of guilds to return. Range 1 - 200. Default 200.</p>"},{"location":"resources/user/#discord.resources.user.FetchUserGuildsParams.with_counts","title":"<code>with_counts: bool</code>  <code>instance-attribute</code>","text":"<p>Include approximate member and presence count.</p>"}]}